<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.hitejinro.mapper.Es01W02Mapper">
    <!-- PRT_00_담보마스타 -->
    <select id="selectList1" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY                                                                                        AS 년도,
               SEQ                                                                                         AS 일련번호,
               SEC_CODE                                                                                    AS 담보종류,
               JUM_CODE                                                                                    AS 지점코드,
               (SELECT SMALLNAME
                FROM V_IA03
                WHERE BUSEO = JUM_CODE)                                                                    AS 지점명,
               REQ_JUM                                                                                     AS 의뢰한지점코드,
               (SELECT SMALLNAME
                FROM V_IA03
                WHERE BUSEO = REQ_JUM)                                                                     AS 의뢰지점명,
               ESTI_DATE                                                                                   AS 담보감정일자,
               GEO_CODE                                                                                    AS 거래처코드,
               SANGHO                                                                                      AS 거래처명,
               DAEPYO_NAME                                                                                 AS 거래처대표자,
               MARKET_DIV                                                                                  AS 업소구분,
               MARKET_NAME                                                                                 AS 업소명,
               MARKET_CEO                                                                                  AS 업소대표자,
               DEBTOR                                                                                      AS 채무자,
               POSS_OWNER                                                                                  AS 소유자,
               GUARANTOR                                                                                   AS 담보제공자,
               DEBTOR_RELATION                                                                             AS 채무자와담보제공자와의관계,
               B_USE_CODE                                                                                  AS 건축물의용도,
               B_USE_DESC                                                                                  AS 건축물의용도비고,
               B_NAME                                                                                      AS 건물의명칭및호수,
               JUSO1                                                                                       AS 부동산표시_주소1,
               JUSO2                                                                                       AS 부동산표시_주소2,
               L_SIZE                                                                                      AS 지점_토지면적,
               L_SIZE_PY                                                                                   AS 지점_토지면적_평,
               B_SIZE                                                                                      AS 지점_건물면적,
               B_SIZE_PY                                                                                   AS 지점_건물면적_평,
               CURR_AMT                                                                                    AS 지점_시가,
               PLMIN_BID_AMT                                                                               AS 지점_예상1차최저입찰가,
               PL_BID_AMT                                                                                  AS 지점_예상낙찰가,
               C_CL_AMT                                                                                    AS 지점_동시설정한도액,
               L_CL_AMT                                                                                    AS 지점_토지설정한도액,
               B_CL_AMT                                                                                    AS 지점_건물설정한도액,
               C_PL_RANK                                                                                   AS 지점_동시설정예정액_순위,
               C_PL_AMT                                                                                    AS 지점_동시설정예정액_금액,
               L_PL_RANK                                                                                   AS 지점_토지설정예정액_순위,
               L_PL_AMT                                                                                    AS 지점_토지설정예정액_금액,
               B_PL_RANK                                                                                   AS 지점_건물설정예정액_순위,
               B_PL_AMT                                                                                    AS 지점_건물설정예정액_금액,
               MANA_L_SIZE                                                                                 AS 관재_토지면적,
               MANA_L_SIZE_PY                                                                              AS 관재_토지면적_평,
               MANA_B_SIZE                                                                                 AS 관재_건물면적,
               MANA_B_SIZE_PY                                                                              AS 관재_건물면적_평,
               MANA_CURR_AMT                                                                               AS 관재_시가,
               MANA_PL_MIN_BID_AMT                                                                         AS 관재_예상1차최저입찰가,
               MANA_PL_BID_AMT                                                                             AS 관재_예상낙찰가,
               MANA_C_CL_AMT                                                                               AS 관재_동시설정한도액,
               MANA_L_CL_AMT                                                                               AS 관재_토지설정한도액,
               MANA_B_CL_AMT                                                                               AS 관재_건물설정한도액,
               MANA_C_PL_RANK                                                                              AS 관재_동시설정예정액_순위,
               MANA_C_PL_AMT                                                                               AS 관재_동시설정예정액_금액,
               MANA_L_PL_RANK                                                                              AS 관재_토지설정예정액_순위,
               MANA_L_PL_AMT                                                                               AS 관재_토지설정예정액_금액,
               MANA_B_PL_RANK                                                                              AS 관재_건물설정예정액_순위,
               MANA_B_PL_AMT                                                                               AS 관재_건물설정예정액_금액,
               JUM_COMP_DATE                                                                               AS 지점_결재완료일자,
               JUM_TRAN_DATE                                                                               AS 지점_전송일자,
               MANA_RECE_DATE                                                                              AS 관재_접수일자,
               MANA_RECE_SABUN                                                                             AS 관재_접수자사번,
               MANA_COMP_DATE                                                                              AS 관재_결재완료일자,
               PROC_DIV                                                                                    AS 작업진행상태,
               DECODE(SUBSTRB(SEQ, 5, 2), '00', '최초감정', '재감정 (' || TO_NUMBER(SUBSTRB(SEQ, 5, 2)) || '번째)') AS 임시_재감정여부
        FROM ES10
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- PRT_01_입력표_집합건물 -->
    <select id="selectList2" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY                                                           AS 년도,
               SEQ                                                            AS 일련번호,
               JUSO1                                                          AS 부동산표시_주소1,
               JUSO2                                                          AS 부동산표시_주소2,
               LOT_NUM                                                        AS 지번,
               CB_NAME                                                        AS 집합건물의명칭,
               DONG                                                           AS 동수,
               HO                                                             AS 호수,
               LCATEGORY                                                      AS 지목_코드,
               (SELECT CD_DESC
                FROM ES00
                WHERE ATTR_00 = 'DIV112'
                  AND CD_CODE = LCATEGORY)                                    AS 지목,
               LG_OWNER_YN                                                    AS 대지권소유권보유여부,
               LG_OWNER                                                       AS 대지권소유권,
               LG_SIZE                                                        AS 대지권의목적인일단의토지전체,
               ROUND(LG_SIZE * 0.3025, 2)                                     AS 대지권의목적인일단의토지_평,
               POSS_A_AREA                                                    AS 가임대보증금적용지역_코드,
               (SELECT CD_DESC
                FROM ES00
                WHERE ATTR_00 = 'DIV106'
                  AND CD_CODE = POSS_A_AREA)                                  AS 가임대보증금적용지역,
               CB_STRUC                                                       AS 집합건물_구조,
               CB_ROOF                                                        AS 집합건물_지붕,
               CB_UPFLOOR                                                     AS 집합건물_지상,
               CB_DNFLOOR                                                     AS 집합건물_지하,
               CB_FLOOR                                                       AS 집합건물_해당층,
               CB_YYYY                                                        AS 집합건물_건축년도,
               ELAP_YEAR                                                      AS 집합건물_경과년도,
               NUM_HOUSEHOLD                                                  AS 집합건물_세대수,
               NUM_YEAR                                                       AS 집합건물_내용년수,
               CB_EXM_SIZE                                                    AS 집합건물_전유면적,
               CB_EXM_SIZE_PY                                                 AS 집합건물_전유면적_평,
               CB_PUB_SIZE                                                    AS 집합건물_공유면적,
               CB_PUB_SIZE_PY                                                 AS 집합건물_공유면적_평,
               CB_TOT_SIZE                                                    AS 집합건물_면적합계,
               CB_TOT_SIZE_PY                                                 AS 집합건물_면적합계_평,
               OF_GU                                                          AS 오피스텔_용도,
               OF_HEATER_YN                                                   AS 오피스텔_바닥난방,
               OF_FLOOR                                                       AS 오피스텔_상가_층수,
               OF_FLOOR_IDX                                                   AS 오피스텔_상가_층별지수,
               OF_PLACE                                                       AS 오피스텔_상가_위치,
               OF_PLACE_IDX                                                   AS 오피스텔_상가_위치지수,
               OF_JANGA_RATE                                                  AS 오피스텔_상가_잔가율,
               OF_ROAD_CODE                                                   AS 오피스텔_상가_도로조건,
--     OF_ROAD_IDX      AS 오피스텔_상가_도로조건지수  ,
               OF_ACCESS_CODE                                                 AS 오피스텔_상가_접근조건,
--     OF_ACCESS_IDX    AS 오피스텔_상가_접근조건지수  ,
               OF_ETC                                                         AS 오피스텔_상가_기타조건,
               OF_ETC_IDX                                                     AS 오피스텔_상가_기타조건지수,
               REGI_AMT                                                       AS 실거래가격_총액,
               REGI_DAN                                                       AS 실거래가격_단가,
               REGI_DAN_PY                                                    AS 실거래가격_단가_평,
               BASE_AMT                                                       AS 기준시가_총액,
               BASE_DAN                                                       AS 기준시가_단가,
               BASE_DAN_PY                                                    AS 기준시가_단가_평,
               SEC_REGI_SIZE                                                  AS 담보제공비율_전용면적,
               SEC_NUME                                                       AS 담보제공비율_분자,
               SEC_DENO                                                       AS 담보제공비율_분모,
               SEC_RATE                                                       AS 담보제공비율_비율,
               SEC_OFFER_SIZE                                                 AS 담보제공비율_담보제공면적,
               SEC_DESC                                                       AS 담보제공비율_사유,
               INC_AMT                                                        AS 담보제공비율_평가가액,
               FNL_INC_AMT                                                    AS 담보제공비율_최종평가가격,
               CB_NAME || ' ' || DONG || '동 ' || HO || '호'                    AS 임시_단지명칭및동호수,
               '감정대상 물건은 ' || SUBSTRB(CB_YYYY, 1, 4) || '에 사용승인되어 ' || ELAP_YEAR || '년 경과되었으며, 지하 ' || CB_DNFLOOR ||
               '층, 지상 ' || CB_UPFLOOR || '층중의 ' || CB_FLOOR || '층에 專有部分이 위치함' AS 임시_전유부분위치
        FROM ES2011
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- PRT_03_입력표_규제사항개관 -->
    <select id="selectList3" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY          AS 년도,
               SEQ           AS 일련번호,
               REST_PL_USE   AS 국토계획,
               REST_OT_LAW   AS 다른법률,
               REST_EN_RULE  AS 시행령부칙,
               REST_FU_LAW   AS 토지이용규제,
               REST_MAIN_USE AS 주변부동산
        FROM ES2017
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_00_인테리어비용 -->
    <select id="selectList4" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT CD_CODE,
               CD_DESC,
               TO_NUMBER(ATTR_07) AS RATE,
               TO_NUMBER(ATTR_08) AS AMT
        FROM ES00
        WHERE ATTR_00 = 'DIV191'
          AND ATTR_01 = '1'
          AND USE_YN = 'Y'
        ]]>
                </select>

    <!-- Q_40_응찰입력표_마스타 -->
    <select id="selectList5" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY                AS 기본_년도,
               SEQ                 AS 기본_일련번호,
               AUC_NO              AS 사항_사건번호,
               COMPETENT_COURT     AS 사항_관할법원,
               AUC_GU              AS 사항_경매구분,
               AUC_DEPT            AS 사항_경매계,
               AUC_TELNO           AS 사항_전화번호,
               AUC_DEMUR           AS 사항_경매신청채권자,
               AUC_CHARGE_AMT      AS 사항_청구금액,
               AUC_START_DATE      AS 사항_경매개시등기일,
               AUC_DESC            AS 사항_유입시특이사항,
               BID_L_AMT           AS 내용_법원감정가_토지_가격총액,
               BID_L_DAN           AS 내용_법원감정가_토지_단가,
               BID_L_PY_DAN        AS 내용_법원감정가_토지_평당가격,
               BID_B_AMT           AS 내용_법원감정가_건물_가격총액,
               BID_B_DAN           AS 내용_법원감정가_건물_단가,
               BID_B_PY_AMT        AS 내용_법원감정가_건물_평당가격,
               BID_TOT_AMT         AS 내용_법원감정가_합계_가격총액,
               BID_PL_AMT          AS 내용_입찰예정가_금액,
               BID_APPL_RATE       AS 내용_낙찰가율,
               DIV_CRED_MAX_AMT    AS 집계표_경매비용개산_채권액,
               DIV_POSS_A_CASE     AS 집계표_경매비용개산_적용대상,
               DIV_POSS_A_AMT      AS 집계표_경매비용개산_적용금액,
               DIV_PRIOR_MAX_AMT   AS 집계표_선순위자채권최고액합계,
               DIV_PRIOR_SHARE_AMT AS 집계표_선순위자배당금합계,
               DIV_COMP_MAX_AMT    AS 집계표_당사채권최고액합계,
               DIV_COMP_SHARE_AMT  AS 집계표_당사배당금합계,
               DIV_COMP_UNR_AMT    AS 집계표_당사의미회수채권액,
               RIGHT_ALLOT_AMT     AS 수지1_경락후_부담비용합계,
               OBT_AMT             AS 수지2_실제취득가,
               TENURE_YEAR         AS 수지3_예정보유기간,
               STD_PRICE_RATE      AS 수지3_기준시가상승률,
               PLAN_SALE_AMT       AS 수지3_추정예상매각금액,
               SALE_AMT            AS 수지3_매각확신금액,
               SALE_DESC           AS 수지3_매각확신금액을적용한사유,
               IN_OBT_TAX_RATE     AS 수지4_취득비용_취득세율,
               IN_OBT_TAX          AS 수지4_취득비용_취득세,
               IN_OBT_REG_TAX_RATE AS 수지4_취득비용_등록세율,
               IN_OBT_REG_TAX      AS 수지4_취득비용_등록세,
               IN_OBT_EXEU_AMT     AS 수지4_취득비용_강제집행비용,
               IN_OBT_LOSS_AMT     AS 수지4_취득비용_손실액,
               IN_OBT_ETC_AMT      AS 수지4_취득비용_기타부대비용,
               IN_OBT_EXEU_TOT     AS 수지4_취득비용합계,
               IN_OBT_WONGA_TOT    AS 수지4_취득원가합계,
               IN_OBT_TOTAL_AMT    AS 수지4_총취득원가합계,
               IN_EAR_RENT_AMT     AS 수지5_보유수익_임대수익,
               IN_EAR_RENT_SEC_AMT AS 수지5_보유수익_임대보증금,
               IN_EAR_RENT_MON_AMT AS 수지5_보유수익_월임대수입,
               IN_EAR_RENT_ETC_AMT AS 수지5_보유수익_기타의수익,
               IN_EAR_TOT_AMT      AS 수지5_보유수익합계,
               IN_EXP_OPP_AMT      AS 수지6_보유비용_기회비용,
               IN_EXP_VAT_AMT      AS 수지6_보유비용_부가세,
               IN_EXP_CORP_TAX     AS 수지6_보유비용_법인세,
               IN_EXP_PROP_TAX     AS 수지6_보유비용_재산세,
               IN_EXP_ESTA_GU      AS 수지6_보유비용_종부세구분,
               IN_EXP_ESTA_AMT     AS 수지6_보유비용_종부세금액,
               IN_EXP_ETC_AMT      AS 수지6_보유비용_기타유지보수비,
               IN_EXP_TOT_AMT      AS 수지6_보유비용합계,
               IN_DIS_GU           AS 수지7_처분비용_구분,
               IN_DIS_AMT          AS 수지7_처분비용_금액,
               IN_DIS_ETC_AMT      AS 수지7_처분비용_기타처분비용,
               IN_DIS_TOT_AMT      AS 수지7_처분비용합계,
               ITOT_EXPENSE_AMT    AS 수지8_각항목별합계_비용합계,
               ITOT_EARNING_AMT    AS 수지8_각항목별합계_수익합계,
               ITOT_PROFIT_AMT     AS 수지8_각항목별합계_예상손익,
               FNL_PROFIT_AMT      AS 수지8_최종적인전체손익,
               BID_YN              AS 수지8_응찰여부결정
        FROM ES4110
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_41_응찰입력표_경매기일내역 -->
    <select id="selectList6" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY      AS 년도,
               SEQ       AS 일련번호,
               LN_SEQ    AS 회차,
               GIIL_DATE AS 일자,
               GIIL_AMT  AS 금액,
               YUCHAL_YN AS 유찰여부
        FROM ES4111
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_42_응찰입력표_전감정개요 -->
    <select id="selectList7" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY               AS 년도,
               SEQ                AS 일련번호,
               JUM_ESTI_DATE      AS 지점_감정일,
               JUM_SABUN1         AS 지점_감정자_담당자,
               JUM_SABUN2         AS 지점_감정자_파트장,
               JUM_SABUN3         AS 지점_감정자_팀장,
               JUM_SABUN4         AS 지점_감정자_지점장,
               JUM_PL_MIN_BID_AMT AS 지점_제1차예상입찰가,
               JUM_PL_BID_AMT     AS 지점_예상낙찰가,
               JUM_PL_BID_RATE    AS 지점_예상낙찰가율,
               JUM_SEC_AMT        AS 지점_담보여력,
               JUM_COMP_AMT       AS 지점_당사채권금액,
               JUM_COMP_RIGHT     AS 지점_당사순위및등기권리,
               ESTI_DATE          AS 본사_감정일,
               SABUN1             AS 본사_감정자_1차결재,
               SABUN2             AS 본사_감정자_2차결재,
               SABUN3             AS 본사_감정자_3차결재,
               SABUN4             AS 본사_감정자_관재파트장,
               SABUN5             AS 본사_감정자_팀장,
               PL_MIN_BID_AMT     AS 본사_제1차예상입찰가,
               PL_BID_AMT         AS 본사_예상낙찰가,
               PL_BID_RATE        AS 본사_예상낙찰가율,
               SEC_AMT            AS 본사_담보여력,
               COMP_AMT           AS 본사_당사채권금액,
               COMP_RIGHT         AS 본사_당사순위및등기권리
        FROM ES4112
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_43_응찰입력표_선순위권리내역 -->
    <select id="selectList8" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY         AS 년도,
               SEQ          AS 일련번호,
               LN_SEQ       AS 순번,
               CRED_AMT     AS 금액,
               RIGHT_PERSON AS 권리자,
               RIGHT_DESC   AS 권리내역
        FROM ES4113
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_44_응찰입력표_선순위부담금액 -->
    <select id="selectList9" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT YYYY         AS 년도,
               SEQ          AS 일련번호,
               LN_SEQ       AS 순번,
               CRED_AMT     AS 금액,
               RIGHT_PERSON AS 권리자,
               RIGHT_DESC   AS 권리내역
        FROM ES4114
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_49_DUAL_등록세 -->
    <select id="selectList10" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT 2.2 AS CD_CODE, '2.2%' AS CD_DESC
        FROM DUAL
        UNION ALL
        SELECT 1.2 AS CD_CODE, '1.2%' AS CD_DESC
        FROM DUAL
        ]]>
                </select>

    <!-- Q_49_DUAL_종합부동산세 -->
    <select id="selectList11" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT *
        FROM (SELECT '4' AS GU, '1' AS GU_CODE, '종합합산' AS GU_DESC, 119 AS GU_VAL
              FROM DUAL
              UNION ALL
              SELECT '4' AS GU, '2' AS GU_CODE, '별도합산' AS GU_DESC, 2800 AS GU_VAL
              FROM DUAL
              UNION ALL
              SELECT '5' AS GU, '1' AS GU_CODE, '종합합산' AS GU_DESC, 119 AS GU_VAL
              FROM DUAL
              UNION ALL
              SELECT '5' AS GU, '2' AS GU_CODE, '별도합산' AS GU_DESC, 2800 AS GU_VAL
              FROM DUAL
              UNION ALL
              SELECT '1' AS GU, '9' AS GU_CODE, '집합건물' AS GU_DESC, 0.005 AS GU_VAL
              FROM DUAL)
        WHERE GU = SUBSTRB(#{담보종류}, 1, 1)
        ]]>
                </select>

    <!-- Q_49_DUAL_처분비용 -->
    <select id="selectList12" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT 25 AS 처분비율, '1' AS 처분구분, '사업용 처분에 따른 법인세' AS 처분비용
        FROM DUAL
        UNION ALL
        SELECT 55 AS 처분비율, '2' AS 처분구분, '비사업용 처분에 따른 법인세' AS 처분비용
        FROM DUAL
        ]]>
                </select>

    <!-- Q_49_DUAL_취득세 -->
    <select id="selectList13" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT 2.1 AS CD_CODE, '2.1%' AS CD_DESC
        FROM DUAL
        UNION ALL
        SELECT 1.1 AS CD_CODE, '1.1%' AS CD_DESC
        FROM DUAL
        ]]>
                </select>

    <!-- Q_99_평가구분 -->
    <select id="selectList14" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT CD_CODE, CD_DESC
        FROM ES00
        WHERE ATTR_00 = 'DIV194'
          AND USE_YN = 'Y'
        ORDER BY ORDER_SEQ, CD_CODE
        ]]>
                </select>

    <!-- Q_가격사례_D -->
    <select id="selectList15" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               ln_seq,
               rno,
               check_yn,
               b_size,
               b_size_py,
               curr_min_amt,
               curr_max_amt,
               curr_avg_amt,
               curr_py_dan,
               lease_amt,
               lease_rate,
               '' AS flag
        FROM es2151
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_가격사례_M -->
    <select id="selectList16" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               ln_seq,
               b_name,
               juso,
               b_year,
               house_cnt,
               '' AS btn
        FROM es2141
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_감정가_감정M -->
    <select id="selectList17" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               ma_max_amt,
               ma_min_amt,
               ma_rate,
               pr_max_amt,
               pr_min_amt,
               pr_rate,
               au_max_amt,
               au_min_amt,
               au_rate,
               appl_amt,
               int_rep_amt,
               int_rep_dan_code,
               int_rep_dan,
               int_rep_size,
               int_rep_size_py,
               increase_amt,
               last_increase_amt
        FROM es2101
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_감정가_경매사례 -->
    <select id="selectList18" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               ln_seq,
               au_no,
               check_yn,
               b_name,
               juso,
               tot_floor,
               floor,
               b_size,
               b_size_py,
               law_amt,
               curr_py_dan,
               bid_amt,
               bid_rate,
               '' AS btn
        FROM es2111
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_감정가_본건 -->
    <select id="selectList19" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               ln_seq,
               check_yn,
               b_size,
               b_size_py,
               curr_min_amt,
               curr_max_amt,
               curr_avg_amt,
               curr_py_dan,
               lease_amt,
               lease_rate,
               check_yn AS check_flag
        FROM es2181
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_감정순번 -->
    <select id="selectList20" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT LPAD(ES_SEQ.NEXTVAL, 6, '0') AS SEQ
        FROM DUAL
        ]]>
                </select>

    <!-- Q_감정순번_20100618 -->
    <select id="selectList21" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT LPAD(NVL(TO_NUMBER(MAX(SUBSTR(seq, 1, 4))), 0) + 1,
                    4,
                    '0'
                   )
                   || '00' AS seq
        FROM es10
        WHERE yyyy = #{년도}
        ]]>
                </select>

    <!-- Q_거래처목록 -->
    <select id="selectList22" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT geo_code, yakho AS sangho, saup_no, daepyo_name, uptae, jongmok
        FROM V_CO01
        WHERE yakho LIKE '%' || #{거래처명} || '%'

        ORDER BY yakho
        ]]>
                </select>

    <!-- Q_건축물의경과년도 -->
    <select id="selectList23" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_08
        FROM es00
        WHERE attr_00 = 'DIV152'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_결재진행현황 -->
    <select id="selectList24" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT '%' cd_code, '전체' cd_desc
        FROM DUAL
        UNION ALL
        SELECT cd_code, cd_desc
        FROM es00
        WHERE cd_div = '172'
        ]]>
                </select>

    <!-- Q_공통보고서_당사설정액 -->
    <select id="selectList25" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT MAX(RANK_LAST) AS 최종순위,
               SUM(AMT)       AS 채권금액
        FROM (SELECT DISTINCT RANK,
                              (SELECT CNT
                               FROM (SELECT COUNT(*) CNT
                                     FROM ES2404
                                     WHERE YYYY = #{년도}
                                       AND SEQ = #{감정순번}
                                       AND RANK > 6
                                     GROUP BY SHA_GU, LN_SEQ
                                     ORDER BY 1 DESC)
                               WHERE ROWNUM = 1)                            AS RANK_LAST,
                              DISP_RANK,
                              (SELECT CD_DESC
                               FROM ES00
                               WHERE ATTR_00 = 'DIV511'
                                 AND CD_CODE = DISP_RANK)                   AS DISP_RANK_NAME,
                              NVL(CRED_SELF_AMT, 0) + NVL(CRED_COMB_AMT, 0) AS AMT
              FROM ES2404 A
              WHERE YYYY = #{년도}
                AND SEQ = #{감정순번}
                AND NVL(HITE_YN, 'N') = 'Y')
        ]]>
                </select>

    <!-- Q_공통보고서_당사설정액JB -->
    <select id="selectList26" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT MAX(RANK_LAST) AS 최종순위,
               SUM(AMT)       AS 채권금액
        FROM (SELECT DISTINCT RANK,
                              (SELECT CNT
                               FROM (SELECT COUNT(*) CNT
                                     FROM JB2404
                                     WHERE YYYY = #{년도}
                                       AND SEQ = #{감정순번}
                                       AND RANK > 6
                                     GROUP BY SHA_GU, LN_SEQ
                                     ORDER BY 1 DESC)
                               WHERE ROWNUM = 1)                            AS RANK_LAST,
                              DISP_RANK,
                              (SELECT CD_DESC
                               FROM ES00
                               WHERE ATTR_00 = 'DIV511'
                                 AND CD_CODE = DISP_RANK)                   AS DISP_RANK_NAME,
                              NVL(CRED_SELF_AMT, 0) + NVL(CRED_COMB_AMT, 0) AS AMT
              FROM JB2404 A
              WHERE YYYY = #{년도}
                AND SEQ = #{감정순번}
                AND NVL(HITE_YN, 'N') = 'Y')
        ]]>
                </select>

    <!-- Q_공통보고서_보정표 -->
    <select id="selectList27" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT INCREASE_AMT                          AS 평가가격,
               ROUND(INCREASE_AMT / CB_SIZE, 0)      AS 평가가격_단가,
               ROUND(INCREASE_AMT / CB_SIZE_PY, 0)   AS 평가가격_단가_평,
               PL_MIN_BID_AMT                        AS 제1차예상최저입찰가,
               ROUND(PL_MIN_BID_AMT / CB_SIZE, 0)    AS 제1차예상최저입찰가_단가,
               ROUND(PL_MIN_BID_AMT / CB_SIZE_PY, 0) AS 제1차예상최저입찰가_단가_평,
               PL_BID_AMT                            AS 예상낙찰가,
               ROUND(PL_BID_AMT / CB_SIZE, 0)        AS 예상낙찰가_단가,
               ROUND(PL_BID_AMT / CB_SIZE_PY, 0)     AS 예상낙찰가_단가_평,
               APPL_RATE                             AS 예상낙찰가율
        FROM (SELECT DECODE(SEC_CODE, '101', CB_TOT_SIZE, CB_EXM_SIZE)       AS CB_SIZE,
                     DECODE(SEC_CODE, '101', CB_TOT_SIZE_PY, CB_EXM_SIZE_PY) AS CB_SIZE_PY,
                     C.APPL_RATE,
                     C.INCREASE_AMT,
                     C.PL_MIN_BID_AMT,
                     C.PL_BID_AMT
              FROM ES10 A,
                   ES2011 B,
                   ES2301 C
              WHERE A.YYYY = #{년도}
                AND A.SEQ = #{감정순번}
                AND A.YYYY = B.YYYY
                AND A.SEQ = B.SEQ
                AND A.YYYY = C.YYYY
                AND A.SEQ = C.SEQ)
        ]]>
                </select>

    <!-- Q_공통보고서_보정표JB -->
    <select id="selectList28" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT INCREASE_AMT                          AS 평가가격,
               ROUND(INCREASE_AMT / CB_SIZE, 0)      AS 평가가격_단가,
               ROUND(INCREASE_AMT / CB_SIZE_PY, 0)   AS 평가가격_단가_평,
               PL_MIN_BID_AMT                        AS 제1차예상최저입찰가,
               ROUND(PL_MIN_BID_AMT / CB_SIZE, 0)    AS 제1차예상최저입찰가_단가,
               ROUND(PL_MIN_BID_AMT / CB_SIZE_PY, 0) AS 제1차예상최저입찰가_단가_평,
               PL_BID_AMT                            AS 예상낙찰가,
               ROUND(PL_BID_AMT / CB_SIZE, 0)        AS 예상낙찰가_단가,
               ROUND(PL_BID_AMT / CB_SIZE_PY, 0)     AS 예상낙찰가_단가_평,
               APPL_RATE                             AS 예상낙찰가율
        FROM (SELECT DECODE(SEC_CODE, '101', CB_TOT_SIZE, CB_EXM_SIZE)       AS CB_SIZE,
                     DECODE(SEC_CODE, '101', CB_TOT_SIZE_PY, CB_EXM_SIZE_PY) AS CB_SIZE_PY,
                     C.APPL_RATE,
                     C.INCREASE_AMT,
                     C.PL_MIN_BID_AMT,
                     C.PL_BID_AMT
              FROM JB10 A,
                   JB2011 B,
                   JB2301 C
              WHERE A.YYYY = #{년도}
                AND A.SEQ = #{감정순번}
                AND A.YYYY = B.YYYY
                AND A.SEQ = B.SEQ
                AND A.YYYY = C.YYYY
                AND A.SEQ = C.SEQ)
        ]]>
                </select>

    <!-- Q_공통보고서_초과부족설정액 -->
    <select id="selectList29" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT 담보여력_설정전    AS 담보여력,
               초과_부족설정액_문자 AS 초과_부족설정액
        FROM V_ES10_01
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_공통보고서_초과부족설정액JB -->
    <select id="selectList30" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT 담보여력_설정전    AS 담보여력,
               초과_부족설정액_문자 AS 초과_부족설정액
        FROM V_JB10_01
        WHERE YYYY = #{년도}
          AND SEQ = #{감정순번}
        ]]>
                </select>

    <!-- Q_공통보고서_초과부족설정액JB_20081219 -->
    <select id="selectList31" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT PL_BID_AMT,
               SAMT,
               (CASE WHEN AMT <= 0 THEN 0 ELSE AMT END) AS 담보여력,
               (CASE
                    WHEN AMT = HITE_AMT THEN '없음'
                    WHEN AMT > HITE_AMT THEN TO_CHAR(AMT - HITE_AMT, 'FM999,999,999,999') || ' 부족설정'
                    WHEN AMT < HITE_AMT THEN
                            TO_CHAR(ABS((CASE WHEN AMT <= 0 THEN 0 ELSE AMT END) - HITE_AMT), 'FM999,999,999,999') ||
                            ' 초과설정'
                   END)                                 AS 초과_부족설정액
        FROM (SELECT PL_BID_AMT,
                     SAMT,
                     NVL(PL_BID_AMT, 0) - NVL(SAMT, 0) AS AMT,
                     NVL(HITE_AMT, 0)                  AS HITE_AMT
              FROM JB10 A,
                   (SELECT YYYY,
                           SEQ,
                           SUM(DECODE(ERA_YN || NVL(HITE_YN, 'N'), 'NN', AMT)) AS SAMT,
                           SUM(DECODE(NVL(HITE_YN, 'N'), 'Y', AMT))            AS HITE_AMT
                    FROM (SELECT DISTINCT YYYY,
                                          SEQ,
                                          RIGHT_DATE,
                                          RIGHT_PERSON,
                                          RIGHT_CODE,
                                          ERA_YN,
                                          NVL(CRED_SELF_AMT, 0) + NVL(CRED_COMB_AMT, 0) AS AMT,
                                          HITE_YN
                          FROM JB2404 A
--                         WHERE YYYY   = '2008'
--                           AND SEQ    = '001900'
                         )
                    GROUP BY YYYY, SEQ) B
              WHERE A.YYYY = #{년도}
                AND A.SEQ = #{감정순번}
                AND A.YYYY = B.YYYY
                AND A.SEQ = B.SEQ)
        ]]>
                </select>

    <!-- Q_공통보고서_초과부족설정액_20081219 -->
    <select id="selectList32" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT PL_BID_AMT,
               SAMT,
               (CASE WHEN AMT <= 0 THEN 0 ELSE AMT END) AS 담보여력,
               (CASE
                    WHEN AMT = HITE_AMT THEN '없음'
                    WHEN AMT > HITE_AMT THEN TO_CHAR(AMT - HITE_AMT, 'FM999,999,999,999') || ' 부족설정'
                    WHEN AMT < HITE_AMT THEN
                            TO_CHAR(ABS((CASE WHEN AMT <= 0 THEN 0 ELSE AMT END) - HITE_AMT), 'FM999,999,999,999') ||
                            ' 초과설정'
                   END)                                 AS 초과_부족설정액
        FROM (SELECT PL_BID_AMT,
                     SAMT,
                     NVL(PL_BID_AMT, 0) - NVL(SAMT, 0) AS AMT,
                     NVL(HITE_AMT, 0)                  AS HITE_AMT
              FROM ES10 A,
                   (SELECT YYYY,
                           SEQ,
                           SUM(DECODE(ERA_YN || NVL(HITE_YN, 'N'), 'NN', AMT)) AS SAMT,
                           SUM(DECODE(NVL(HITE_YN, 'N'), 'Y', AMT))            AS HITE_AMT
                    FROM (SELECT DISTINCT YYYY,
                                          SEQ,
                                          RIGHT_DATE,
                                          RIGHT_PERSON,
                                          RIGHT_CODE,
                                          ERA_YN,
                                          NVL(CRED_SELF_AMT, 0) + NVL(CRED_COMB_AMT, 0) AS AMT,
                                          HITE_YN
                          FROM ES2404 A
--                         WHERE YYYY   = '2008'
--                           AND SEQ    = '001900'
                         )
                    GROUP BY YYYY, SEQ) B
              WHERE A.YYYY = #{년도}
                AND A.SEQ = #{감정순번}
                AND A.YYYY = B.YYYY
                AND A.SEQ = B.SEQ)
        ]]>
                </select>

    <!-- Q_공통보고서_최고최저 -->
    <select id="selectList33" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT MIN_AMT,
               --// 아파트일경우만 면적합계로 나머지는 전유면적으로 계산함
               ROUND(MIN_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE, CB_EXM_SIZE), 0)       AS MIN_DAN,
               ROUND(MIN_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE_PY, CB_EXM_SIZE_PY), 0) AS MIN_DAN_PY,
               MAX_AMT,
               ROUND(MAX_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE, CB_EXM_SIZE), 0)       AS MAN_DAN,
               ROUND(MAX_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE_PY, CB_EXM_SIZE_PY), 0) AS MAN_DAN_PY
        FROM ES10 A,
             ES2011 B,
             (--// 감정평가_아파트
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(MA_MIN_AMT, 0, 999999999999999999, MA_MIN_AMT),
                              DECODE(PR_MIN_AMT, 0, 999999999999999999, PR_MIN_AMT),
                              DECODE(AU_MIN_AMT, 0, 999999999999999999, AU_MIN_AMT)) AS MIN_AMT,
                        GREATEST(MA_MAX_AMT, PR_MAX_AMT, AU_MAX_AMT)                 AS MAX_AMT
                 FROM ES2101
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}
                 UNION ALL
                 --// 감정평가_연립,다세대
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(MA_MIN_AMT, 0, 999999999999999999, MA_MIN_AMT),
                              DECODE(PR_MIN_AMT, 0, 999999999999999999, PR_MIN_AMT),
                              DECODE(AU_MIN_AMT, 0, 999999999999999999, AU_MIN_AMT)) AS MIN_AMT,
                        GREATEST(MA_MAX_AMT, PR_MAX_AMT, AU_MAX_AMT)                 AS MAX_AMT
                 FROM ES2102
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}
                 UNION ALL
                 --// 감정평가 상업용
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(CO_MIN_AMT, 0, 999999999999999999, CO_MIN_AMT),
                              DECODE(EA_MIN_AMT, 0, 999999999999999999, EA_MIN_AMT)) AS MIN_AMT,
                        GREATEST(CO_MAX_AMT, EA_MAX_AMT)                             AS MAX_AMT
                 FROM ES2103
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}
                 UNION ALL
                 --// 감정평가_오피스텔
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(MA_MIN_AMT, 0, 999999999999999999, MA_MIN_AMT),
                              DECODE(PR_MIN_AMT, 0, 999999999999999999, PR_MIN_AMT),
                              DECODE(AU_MIN_AMT, 0, 999999999999999999, AU_MIN_AMT)) AS MIN_AMT,
                        GREATEST(MA_MAX_AMT, PR_MAX_AMT, AU_MAX_AMT)                 AS MAX_AMT
                 FROM ES2104
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}) C
        WHERE A.YYYY = #{년도}
          AND A.SEQ = #{감정순번}
          AND A.YYYY = B.YYYY
          AND A.SEQ = B.SEQ
          AND A.YYYY = C.YYYY
          AND A.SEQ = C.SEQ
        ]]>
                </select>

    <!-- Q_공통보고서_최고최저JB -->
    <select id="selectList34" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT MIN_AMT,
               --// 아파트일경우만 면적합계로 나머지는 전유면적으로 계산함
               ROUND(MIN_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE, CB_EXM_SIZE), 0)       AS MIN_DAN,
               ROUND(MIN_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE_PY, CB_EXM_SIZE_PY), 0) AS MIN_DAN_PY,
               MAX_AMT,
               ROUND(MAX_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE, CB_EXM_SIZE), 0)       AS MAN_DAN,
               ROUND(MAX_AMT / DECODE(SEC_CODE, '101', CB_TOT_SIZE_PY, CB_EXM_SIZE_PY), 0) AS MAN_DAN_PY
        FROM JB10 A,
             JB2011 B,
             (--// 감정평가_아파트
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(MA_MIN_AMT, 0, 999999999999999999, MA_MIN_AMT),
                              DECODE(PR_MIN_AMT, 0, 999999999999999999, PR_MIN_AMT),
                              DECODE(AU_MIN_AMT, 0, 999999999999999999, AU_MIN_AMT)) AS MIN_AMT,
                        GREATEST(MA_MAX_AMT, PR_MAX_AMT, AU_MAX_AMT)                 AS MAX_AMT
                 FROM JB2101
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}
                 UNION ALL
                 --// 감정평가_연립,다세대
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(MA_MIN_AMT, 0, 999999999999999999, MA_MIN_AMT),
                              DECODE(PR_MIN_AMT, 0, 999999999999999999, PR_MIN_AMT),
                              DECODE(AU_MIN_AMT, 0, 999999999999999999, AU_MIN_AMT)) AS MIN_AMT,
                        GREATEST(MA_MAX_AMT, PR_MAX_AMT, AU_MAX_AMT)                 AS MAX_AMT
                 FROM JB2102
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}
                 UNION ALL
                 --// 감정평가 상업용
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(CO_MIN_AMT, 0, 999999999999999999, CO_MIN_AMT),
                              DECODE(EA_MIN_AMT, 0, 999999999999999999, EA_MIN_AMT)) AS MIN_AMT,
                        GREATEST(CO_MAX_AMT, EA_MAX_AMT)                             AS MAX_AMT
                 FROM JB2103
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}
                 UNION ALL
                 --// 감정평가_오피스텔
                 SELECT YYYY,
                        SEQ,
                        LEAST(DECODE(MA_MIN_AMT, 0, 999999999999999999, MA_MIN_AMT),
                              DECODE(PR_MIN_AMT, 0, 999999999999999999, PR_MIN_AMT),
                              DECODE(AU_MIN_AMT, 0, 999999999999999999, AU_MIN_AMT)) AS MIN_AMT,
                        GREATEST(MA_MAX_AMT, PR_MAX_AMT, AU_MAX_AMT)                 AS MAX_AMT
                 FROM JB2104
                 WHERE YYYY = #{년도}
                   AND SEQ = #{감정순번}) C
        WHERE A.YYYY = #{년도}
          AND A.SEQ = #{감정순번}
          AND A.YYYY = B.YYYY
          AND A.SEQ = B.SEQ
          AND A.YYYY = C.YYYY
          AND A.SEQ = C.SEQ
        ]]>
                </select>

    <!-- Q_공통보고서_트리 -->
    <select id="selectList35" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code,
               cd_desc,
               SYS_CONNECT_BY_PATH((cd_desc), '/') AS cd_view,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 1, cd_desc), '/'),
                       '/',
                       ''
                   )                                  level1,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 2, cd_desc), '/'),
                       '/',
                       ''
                   )                                  level2,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 3, cd_desc), '/'),
                       '/',
                       ''
                   )                                  level3,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 4, cd_desc), '/'),
                       '/',
                       ''
                   )                                  level4,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 5, cd_desc), '/'),
                       '/',
                       ''
                   )                                  level5,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 1, cd_desc), '/'),
                       '/',
                       ''
                   )                                  cd_level1,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 2, cd_code), '/'),
                       '/',
                       ''
                   )                                  cd_level2,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 3, cd_code), '/'),
                       '/',
                       ''
                   )                                  cd_level3,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 4, cd_code), '/'),
                       '/',
                       ''
                   )                                  cd_level4,
               REPLACE(SYS_CONNECT_BY_PATH(DECODE(LEVEL, 5, cd_code), '/'),
                       '/',
                       ''
                   )                                  cd_level5
        FROM es00
        WHERE cd_div = '164'
        START WITH cd_code = '9999'
        CONNECT BY PRIOR cd_code = attr_01
        ORDER SIBLINGS BY cd_code
        ]]>
                </select>

    <!-- Q_관리부서확인 -->
    <select id="selectList36" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT MANAGE_FLAG
        FROM V_IA03
        WHERE BUSEO = #{_부서코드}
        ]]>
                </select>

    <!-- Q_구조 -->
    <select id="selectList37" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, attr_03 as cd_desc
        FROM es00
        WHERE cd_div = '301'
          AND cd_code LIKE '37%'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_규제의표시 -->
    <select id="selectList38" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               rest_pl_use,
               rest_ot_law,
               rest_en_rule,
               rest_fu_law,
               rest_main_use
        FROM es2017
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_낙찰가율보정표 -->
    <select id="selectList39" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               p_bid_rate,
               k_bid_rate,
               b_bid_rate,
               appl_rate,
               rights_code,
               rights_rate,
               increase_amt,
               pl_min_bid_amt,
               pl_bid_amt,
               apt_scale,
               apt_scale_rate,
               apt_exm_size,
               apt_exm_rate,
               apt_floor_code,
               apt_floor_rate,
               apt_elap_code,
               apt_elap_rate,
               mul_adj_road,
               mul_adj_rate,
               mul_exm_size,
               mul_exm_rate,
               mul_floor_code,
               mul_floor_rate,
               mul_elap_code,
               mul_elap_rate,
               off_exm_size,
               off_exm_rate,
               off_conv_located,
               off_conv_rate,
               off_floor_code,
               off_floor_rate,
               off_elap_code,
               off_elap_rate,
               bus_appro_code,
               bus_appro_rate,
               bus_floor_loc,
               bus_floor_rate,
               bus_comm_dev,
               bus_comm_rate,
               bus_elap_code,
               bus_elap_rate
        FROM es2301
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_담당자메일조회 -->
    <select id="selectList40" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT sabun, NAME, email, DECODE(phone, '--', '', phone) AS phone
        FROM (SELECT sabun,
                     NAME,
                     email || '@hite.com'                     AS email,
                     phone
              FROM v_ia01)
        WHERE sabun = #{_사원번호}
        ]]>
                </select>

    <!-- Q_담보마스타 -->
    <select id="selectList41" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               sec_code,
               jum_code,
               req_jum,
               esti_date,
               geo_code,
               sangho,
               daepyo_name,
               market_div,
               market_name,
               market_ceo,
               debtor,
               poss_owner,
               guarantor,
               debtor_relation,
               b_use_code,
               b_use_desc,
               b_name,
               juso1,
               juso2,
               l_size,
               l_size_py,
               b_size,
               b_size_py,
               curr_amt,
               plmin_bid_amt,
               pl_bid_amt,
               c_cl_amt,
               l_cl_amt,
               b_cl_amt,
               c_pl_rank,
               c_pl_amt,
               l_pl_rank,
               l_pl_amt,
               b_pl_rank,
               b_pl_amt,
               mana_l_size,
               mana_l_size_py,
               mana_b_size,
               mana_b_size_py,
               mana_curr_amt,
               mana_pl_min_bid_amt,
               mana_pl_bid_amt,
               mana_c_cl_amt,
               mana_l_cl_amt,
               mana_b_cl_amt,
               mana_c_pl_rank,
               mana_c_pl_amt,
               mana_l_pl_rank,
               mana_l_pl_amt,
               mana_b_pl_rank,
               mana_b_pl_amt,
               jum_comp_date,
               jum_tran_date,
               mana_rece_date,
               mana_rece_sabun,
               mana_comp_date,
               proc_div,
               doc_key,
               nvl(appraise_gu, '0') as appraise_gu,
               SHARE_YN,
               jum_sabun,
               APPRAISE_GU,
               pre_yyyy,
               pre_seq,
               RPAD(buseo_name, 20, ' ')
                   || RPAD(leader_name, 20, ' ')
                   || NAME           AS jum_sabun_name,
               DECODE(doc_key,
                      TRIM(LPAD(' ', 27, '0')), '대상자료없음',
                      (SELECT MIN(doc_name) AS doc_name
                       FROM es05
                       WHERE doc_key = a.doc_key)
                   )                 AS doc_name
        FROM es10 a,
             v_ia01_leader b
        WHERE a.jum_sabun = b.sabun(+)
          AND yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_담보종류 -->
    <select id="selectList42" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT '%' cd_code, '전체' cd_desc
        FROM DUAL
        UNION ALL
        SELECT cd_code, cd_desc
        FROM es00
        WHERE attr_00 = 'DIV100'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_도로명주소_시군구 -->
    <select id="selectList43" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT '전체'   AS "TEXT",
               '*ALL' AS "CODE",
               '*'    AS "SEQ"
        FROM DUAL
        UNION
        SELECT DISTINCT CITYGU AS "TEXT",
                        CITYGU AS "CODE",
                        CITYGU AS "SEQ"
        FROM V_T_ZIP_ROAD_MAP
        WHERE CITY = #{CITY}
          AND CITYGU IS NOT NULL
        ORDER BY SEQ ASC
        ]]>
                </select>

    <!-- Q_도로명주소_시도 -->
    <select id="selectList44" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT '전체'   AS "TEXT",
               '*ALL' AS "CODE",
               -1     AS "SEQ"
        FROM DUAL
        UNION
        SELECT CD_DESC   AS "TEXT",
               CD_DESC   AS "CODE",
               ORDER_SEQ AS "SEQ"
        FROM ES00
        WHERE CD_DIV = '610'
        ORDER BY SEQ
        ]]>
                </select>

    <!-- Q_도로명주소목록 -->
    <select id="selectList45" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT DISTINCT ZIP_CD,
                        CITY,
                        CITYGU,
                        EUPDONG,
                        RI,
                        ROAD_NM,
                        BUDG_RNUM,
                        BUDG_SNUM
        FROM V_T_ZIP_ROAD_MAP
        WHERE 1 = 1
          AND (CITY = #{CITY} OR #{CITY} = '*ALL')
          AND (CITYGU = #{CITYGU} OR #{CITYGU} = '*ALL')
          AND ROAD_NM || BUDG_RNUM || BUDG_SNUM LIKE REPLACE(REPLACE(#{ROAD_NM}, ' ', ''), '-', '') || '%'
        ORDER BY ZIP_CD,
                 CITY,
                 CITYGU,
                 RI,
                 ROAD_NM,
                 BUDG_RNUM,
                 BUDG_SNUM
        ]]>
                </select>

    <!-- Q_링크사이트 -->
    <select id="selectList46" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_desc, attr_01
        FROM es00
        WHERE cd_div = '400'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_문서관리_관련문서 -->
    <select id="selectList47" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               photo_div,
               ln_seq,
               photo_name,
               file_name,
               remark,
               upload_file,
               file_name AS file_name_tmp
        FROM es2311
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
          AND photo_div = '4'
        ]]>
                </select>

    <!-- Q_문서관리_사진 -->
    <select id="selectList48" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               photo_div,
               ln_seq,
               photo_name,
               file_name,
               remark,
               NULL      AS btn,
               upload_file,
               file_name AS file_name_tmp
        FROM es2311
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
          AND photo_div != '4'
        ]]>
                </select>

    <!-- Q_배당표M -->
    <select id="selectList49" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               auction_code,
               auction_amt,
               cred_max_amt,
               h_pl_bid_amt,
               h_poss_amt,
               h_poss_a_area,
               h_poss_a_amt,
               b_pl_bid_amt,
               b_poss_amt,
               b_lease_area,
               b_lease_amt,
               b_poss_a_area,
               b_poss_a_amt
        FROM es2401
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_배당표_배당금_계산 -->
    <select id="selectList50" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               sha_gu,
               ln_seq,
               RANK,
               disp_rank,
               right_date,
               right_person,
               right_code,
               era_yn,
               cred_self_amt,
               cred_comb_amt,
               hite_yn,
               pro_rate_code,
               pro_rate_gu,
               pro_rate_div,
               pro_rate_step,
               pro_rate_cycle,
               'U'           AS flag,
               cred_self_amt AS cred_self_amt_org,
               cred_comb_amt AS cred_comb_amt_org,
               CASE
                   WHEN TO_NUMBER(disp_rank) < 100
                       THEN 0
                   WHEN TO_NUMBER(disp_rank) >= 100
                       THEN 1
                   END       AS is_enable
        FROM es2404
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        UNION ALL
        SELECT yyyy,
               seq,
               sha_gu,
               ln_seq,
               RANK,
               disp_rank,
               right_date,
               right_person,
               right_code,
               era_yn,
               cred_self_amt,
               cred_comb_amt,
               hite_yn,
               pro_rate_code,
               pro_rate_gu,
               pro_rate_div,
               pro_rate_step,
               pro_rate_cycle,
               'I'           AS flag,
               cred_self_amt AS cred_self_amt_org,
               cred_comb_amt AS cred_comb_amt_org,
               0             AS is_enable
        FROM es2404
        WHERE yyyy = '0000'
          AND seq = '000000'
          AND sha_gu = '0'
          AND NOT EXISTS(SELECT 1
                         FROM es2404
                         WHERE yyyy = #{년도}
                           AND seq = #{감정순번}
                           AND sha_gu = '1'
                           AND RANK <= 6)
        ]]>
                </select>

    <!-- Q_배당표_주택임차보증금_계산 -->
    <select id="selectList51" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               rno,
               resi_name,
               resi_rm_cnt,
               fxdate_yn,
               poss_a_rm_cnt,
               lease_amt,
               rep_be_sec_amt,
               rep_af_sec_amt,
               fxlea_amt,
               fxlea_no_amt,
               fxdate_yn     AS fxdate_yn_org,
               poss_a_rm_cnt AS poss_a_rm_cnt_org,
               lease_amt     AS lease_amt_org
        FROM es2402
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_부서목록 -->
    <select id="selectList52" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT '%' buseo, '전체' buseo_name
        FROM DUAL
        UNION ALL
        SELECT buseo, smallname buseo_name
        FROM V_IA03
        WHERE uses = '0'
          AND SEARCH_COMBO_USE = 'Y'
        ORDER BY BUSEO
        ]]>
                </select>

    <!-- Q_사업부문 -->
    <select id="selectList53" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT CD_CODE AS 사업부문
             , CD_DESC AS 사업부문명
        FROM ES00
        WHERE CD_DIV = '600'
          AND USE_YN = 'Y'
        ORDER BY CD_DIV
        ]]>
                </select>

    <!-- Q_사진구분 -->
    <select id="selectList54" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc
        FROM es00
        WHERE attr_00 = 'DIV163'
          AND cd_code != '4'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_아파트단지규모 -->
    <select id="selectList55" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_08
        FROM es00
        WHERE attr_00 = 'DIV103'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_영업감정요청자료 -->
    <select id="selectList56" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT TRIM(LPAD(' ', 27, '0')) AS doc_key,
               NULL                     AS appr_datetime,
               NULL                     AS esti_date,
               '대상자료없음'                 AS doc_name,
               NULL                     AS jum_code,
               NULL                     AS appr_sabun,
               NULL                     AS proc_div,
               NULL                     AS yyyy,
               NULL                     AS seq,
               NULL                     AS NAME
        FROM DUAL
        UNION
        SELECT doc_key,
               appr_datetime,
               esti_date,
               doc_name,
               jum_code,
               appr_sabun,
               proc_div,
               yyyy,
               seq,
               NAME
        FROM (SELECT doc_key,
                     appr_datetime,
                     esti_date,
                     doc_name,
                     jum_code,
                     appr_sabun,
                     proc_div,
                     yyyy,
                     seq,
                     RANK() OVER (PARTITION BY doc_key ORDER BY doc_key,
                         appr_datetime) rnk
              FROM es05) a,
             v_ia01 b
        WHERE a.appr_sabun = b.sabun
          AND rnk = 1
          ]]>
            <if test='condition1 != "A"'>
                AND seq IS NULL
            </if>
        ORDER BY esti_date desc
    </select>

    <!-- Q_입력표 -->
    <select id="selectList57" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy,
               seq,
               juso1,
               juso2,
               lot_num,
               cb_name,
               dong,
               ho,
               lcategory,
               lg_owner_yn,
               lg_owner,
               lg_size,
               poss_a_area,
               cb_struc,
               cb_roof,
               cb_upfloor,
               cb_dnfloor,
               cb_floor,
               cb_yyyy,
               elap_year,
               num_household,
               num_year,
               cb_exm_size,
               cb_exm_size_py,
               cb_pub_size,
               cb_pub_size_py,
               cb_tot_size,
               cb_tot_size_py,
               of_gu,
               of_heater_yn,
               of_floor,
               of_floor_idx,
               of_place,
               of_place_idx,
               of_janga_rate,
               of_road_code,
               of_access_code,
               of_etc,
               of_etc_idx,
               regi_amt,
               regi_dan,
               regi_dan_py,
               base_amt,
               base_dan,
               base_dan_py,
               sec_regi_size,
               sec_nume,
               sec_deno,
               sec_rate,
               sec_offer_size,
               sec_desc,
               inc_amt,
               fnl_inc_amt
        FROM es2011
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_전유부분의면적 -->
    <select id="selectList58" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_08
        FROM es00
        WHERE attr_00 = 'DIV104'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_전유부분의위치 -->
    <select id="selectList59" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code,
               cd_desc,
               (SELECT attr_08
                FROM es00
                WHERE attr_00 = 'DIV108'
                  AND cd_code = a.attr_01
                  AND use_yn = 'Y') AS attr_08
        FROM es00 a
        WHERE attr_00 = 'DIV107'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_점유자의형태 -->
    <select id="selectList60" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_08
        FROM es00
        WHERE attr_00 = 'DIV101'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_주소목록 -->
    <select id="selectList61" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT zip_code, sido || ' ' || gugun || ' ' || dong || ' ' || ri AS juso_full, juso_full as juso_view
        FROM V_TCO26
        WHERE dong LIKE '%' || #{읍면동} || '%'
        ORDER BY zip_code
        ]]>
                </select>

    <!-- Q_지목 -->
    <select id="selectList62" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc
        FROM es00
        WHERE cd_div = '112'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_지붕 -->
    <select id="selectList63" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc
        FROM es00
        WHERE cd_div = '157'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_집합건물종류 -->
    <select id="selectList64" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc
        FROM es00
        WHERE cd_div = '100'
          AND cd_code LIKE '1%'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_코드_가임대보증금적용지역 -->
    <select id="selectList65" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_02, attr_03
        FROM es00
        WHERE attr_00 = 'DIV106'
          AND attr_01 = '00'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_코드_각구의일련번호 -->
    <select id="selectList66" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc
        FROM es00
        WHERE attr_00 = 'DIV512'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_코드_권리의내용 -->
    <select id="selectList67" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_08, attr_10
        FROM es00
        WHERE attr_00 = 'DIV509'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_코드_순위 -->
    <select id="selectList68" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_01
        FROM es00
        WHERE attr_00 = 'DIV511'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_코드_최고채권액 -->
    <select id="selectList69" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_code, cd_desc, attr_02
        FROM es00
        WHERE attr_00 = 'DIV110'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_크로스 -->
    <select id="selectList70" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT (SELECT lot_num
                FROM es2011
                WHERE yyyy = '2008'
                  AND seq = '000600') AS 지번,
               (SELECT pl_bid_amt
                FROM es2301
                WHERE yyyy = '2008'
                  AND seq = '000600') AS 예상낙찰가,
               divide_amt,
               right_person
        FROM es3402
        WHERE yyyy = '2008'
          AND seq = '000600'
        ORDER BY pro_rate_code
        ]]>
                </select>

    <!-- Q_탁상감정 -->
    <select id="selectList71" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT yyyy, seq, req_date, res_date, res_pl_bid_amt, esti_opi
        FROM es01
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_탁상감정EMail주소조회 -->
    <select id="selectList72" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT cd_desc, attr_01
        FROM es00
        WHERE cd_div = '401'
          AND use_yn = 'Y'
        ]]>
                </select>

    <!-- Q_탁상감정진행상황 -->
    <select id="selectList73" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT CASE
                   WHEN req_date IS NOT NULL AND res_date IS NOT NULL
                       THEN 1 -- 탁상감정 완료
                   WHEN req_date IS NOT NULL AND res_date IS NULL
                       THEN 2 -- 탁상감정 진행 중
                   END AS stat
        FROM es01
        WHERE yyyy = #{년도}
          AND seq = #{감정순번}
        ]]>
                </select>

    <!-- Q_탁상감정파일명 -->
    <select id="selectList74" resultType="java.util.HashMap">
                    <![CDATA[
        SELECT jum_name
                   || '_'
                   || sangho
                   || '_'
                   || market_name
                   || '_'
                   || SUBSTR(esti_date, 3)
                   || '('
                   || DECODE(reesti_yn, '00', '初', '再')
                   || ')' AS file_name
        FROM (SELECT (SELECT REPLACE(smallname, '지점', '')
                      FROM v_ia03
                      WHERE buseo = a.jum_code) AS jum_name,
                     sangho,
                     market_name,
                     esti_date,
                     SUBSTR(seq, 5, 2)          AS reesti_yn
              FROM es10 a
              WHERE yyyy = #{년도}
                AND seq = #{감정순번})
        ]]>
                </select>

    <!-- 저장_40_응찰마스타 -->
    <update id="save75">
                    <![CDATA[
        MERGE INTO ES4110 A
        USING (SELECT #{YYYY} AS YYYY,
                      #{SEQ}  AS SEQ
               FROM DUAL) B
        ON (A.YYYY = B.YYYY AND A.SEQ = B.SEQ)
        WHEN MATCHED THEN
            UPDATE
            SET AUC_NO              = #{AUC_NO},              -- 사건번호
                COMPETENT_COURT     = #{COMPETENT_COURT},     -- 관할법원
                AUC_GU              = #{AUC_GU},              -- 경매구분
                AUC_DEPT            = #{AUC_DEPT},            -- 경매계
                AUC_TELNO           = #{AUC_TELNO},           -- 전화번호
                AUC_DEMUR           = #{AUC_DEMUR},           -- 경매신청채권자
                AUC_CHARGE_AMT      = #{AUC_CHARGE_AMT},      -- 청구금액
                AUC_START_DATE      = #{AUC_START_DATE},      -- 경매개시등기일
                AUC_DESC            = #{AUC_DESC},            -- 유입시 특이사항
                BID_L_AMT           = #{BID_L_AMT},           -- 법원감정가_토지_가격총액
                BID_L_DAN           = #{BID_L_DAN},           -- 법원감정가_토지_㎡_단가
                BID_L_PY_DAN        = #{BID_L_PY_DAN},        -- 법원감정가_토지_평당가격
                BID_B_AMT           = #{BID_B_AMT},           -- 법원감정가_건물_가격총액
                BID_B_DAN           = #{BID_B_DAN},           -- 법원감정가_건물_㎡_단가
                BID_B_PY_AMT        = #{BID_B_PY_AMT},        -- 법원감정가_건물_평당가격
                BID_TOT_AMT         = #{BID_TOT_AMT},         -- 법원감정가_합계_가격총액
                BID_PL_AMT          = #{BID_PL_AMT},          -- 입찰예정가_금액
                BID_APPL_RATE       = #{BID_APPL_RATE},       -- 낙찰가율
                DIV_CRED_MAX_AMT    = #{DIV_CRED_MAX_AMT},    -- 경매비용개산_채권자중최고채권액
                DIV_POSS_A_CASE     = #{DIV_POSS_A_CASE},     -- 경매비용개산_적용대상
                DIV_POSS_A_AMT      = #{DIV_POSS_A_AMT},      -- 경매비용개산_적용금액
                DIV_PRIOR_MAX_AMT   = #{DIV_PRIOR_MAX_AMT},   -- 선순위자 채권최고액합계
                DIV_PRIOR_SHARE_AMT = #{DIV_PRIOR_SHARE_AMT}, -- 선순위자 배당금합계
                DIV_COMP_MAX_AMT    = #{DIV_COMP_MAX_AMT},    -- 당사 채권최고액합계
                DIV_COMP_SHARE_AMT  = #{DIV_COMP_SHARE_AMT},  -- 당사 배당금합계
                DIV_COMP_UNR_AMT    = #{DIV_COMP_UNR_AMT},    -- 당사의 미회수채권액
                RIGHT_ALLOT_AMT     = #{RIGHT_ALLOT_AMT},     -- 경락후 말소되지 않는 선순위권리내역_부담비용합계
                OBT_AMT             = #{OBT_AMT},             -- 실제취득가
                TENURE_YEAR         = #{TENURE_YEAR},         -- 예정보유기간_낙찰후매각가능시점까지의기간
                STD_PRICE_RATE      = #{STD_PRICE_RATE},      -- 3년치기준시가상승률
                PLAN_SALE_AMT       = #{PLAN_SALE_AMT},       -- 추정예상매각금액]
                SALE_AMT            = #{SALE_AMT},            -- 매각확신금액
                SALE_DESC           = #{SALE_DESC},           -- 매각확신금액을적용한사유
                IN_OBT_TAX_RATE     = #{IN_OBT_TAX_RATE},     -- 취득비용_취득세율
                IN_OBT_TAX          = #{IN_OBT_TAX},          -- 취득비용_취득세
                IN_OBT_REG_TAX_RATE = #{IN_OBT_REG_TAX_RATE}, -- 취득비용_등록세율
                IN_OBT_REG_TAX      = #{IN_OBT_REG_TAX},      -- 취득비용_등록세
                IN_OBT_EXEU_AMT     = #{IN_OBT_EXEU_AMT},     -- 취득비용_강제집행 예상비용
                IN_OBT_LOSS_AMT     = #{IN_OBT_LOSS_AMT},     -- 취득비용_채권매입에 따른 손실액
                IN_OBT_ETC_AMT      = #{IN_OBT_ETC_AMT},      -- 취득비용_기타취득부대비용
                IN_OBT_EXEU_TOT     = #{IN_OBT_EXEU_TOT},     -- 취득비용합계
                IN_OBT_WONGA_TOT    = #{IN_OBT_WONGA_TOT},    -- 취득원가합계
                IN_OBT_TOTAL_AMT    = #{IN_OBT_TOTAL_AMT},    -- 총취득원가합계
                IN_EAR_RENT_AMT     = #{IN_EAR_RENT_AMT},     -- 보유수익_임대수익
                IN_EAR_RENT_SEC_AMT = #{IN_EAR_RENT_SEC_AMT}, -- 보유수익_임대보증금
                IN_EAR_RENT_MON_AMT = #{IN_EAR_RENT_MON_AMT}, -- 보유수익_월임대수입
                IN_EAR_RENT_ETC_AMT = #{IN_EAR_RENT_ETC_AMT}, -- 보유수익_기타의수익
                IN_EAR_TOT_AMT      = #{IN_EAR_TOT_AMT},      -- 보유수익합계
                IN_EXP_OPP_AMT      = #{IN_EXP_OPP_AMT},      -- 보유비용_기회비용
                IN_EXP_VAT_AMT      = #{IN_EXP_VAT_AMT},      -- 보유비용_임대수익등에대한부가세
                IN_EXP_CORP_TAX     = #{IN_EXP_CORP_TAX},     -- 보유비용_법인세
                IN_EXP_PROP_TAX     = #{IN_EXP_PROP_TAX},     -- 보유비용_재산세
                IN_EXP_ESTA_GU      = #{IN_EXP_ESTA_GU},      -- 보유비용_종합부동산세구분
                IN_EXP_ESTA_AMT     = #{IN_EXP_ESTA_AMT},     -- 보유비용_종합부동산세금액
                IN_EXP_ETC_AMT      = #{IN_EXP_ETC_AMT},      -- 보유비용_기타유지보수비용
                IN_EXP_TOT_AMT      = #{IN_EXP_TOT_AMT},      -- 보유비용합계
                IN_DIS_GU           = #{IN_DIS_GU},           -- 처분비용_구분
                IN_DIS_AMT          = #{IN_DIS_AMT},          -- 처분비용_금액
                IN_DIS_ETC_AMT      = #{IN_DIS_ETC_AMT},      -- 처분비용_기타처분비용
                IN_DIS_TOT_AMT      = #{IN_DIS_TOT_AMT},      -- 처분비용합계
                ITOT_EXPENSE_AMT    = #{ITOT_EXPENSE_AMT},    -- 각항목별합계_비용합계
                ITOT_EARNING_AMT    = #{ITOT_EARNING_AMT},    -- 각항목별합계_수익합계
                ITOT_PROFIT_AMT     = #{ITOT_PROFIT_AMT},     -- 각항목별합계_예상손익
                FNL_PROFIT_AMT      = #{FNL_PROFIT_AMT},      -- 최종적인전체손익
                BID_YN              = #{BID_YN} -- 응찰여부결정
        WHEN NOT MATCHED THEN
            INSERT (YYYY,
                    SEQ,
                    AUC_NO,
                    COMPETENT_COURT,
                    AUC_GU,
                    AUC_DEPT,
                    AUC_TELNO,
                    AUC_DEMUR,
                    AUC_CHARGE_AMT,
                    AUC_START_DATE,
                    AUC_DESC,
                    BID_L_AMT,
                    BID_L_DAN,
                    BID_L_PY_DAN,
                    BID_B_AMT,
                    BID_B_DAN,
                    BID_B_PY_AMT,
                    BID_TOT_AMT,
                    BID_PL_AMT,
                    BID_APPL_RATE,
                    DIV_CRED_MAX_AMT,
                    DIV_POSS_A_CASE,
                    DIV_POSS_A_AMT,
                    DIV_PRIOR_MAX_AMT,
                    DIV_PRIOR_SHARE_AMT,
                    DIV_COMP_MAX_AMT,
                    DIV_COMP_SHARE_AMT,
                    DIV_COMP_UNR_AMT,
                    RIGHT_ALLOT_AMT,
                    OBT_AMT,
                    TENURE_YEAR,
                    STD_PRICE_RATE,
                    PLAN_SALE_AMT,
                    SALE_AMT,
                    SALE_DESC,
                    IN_OBT_TAX_RATE,
                    IN_OBT_TAX,
                    IN_OBT_REG_TAX_RATE,
                    IN_OBT_REG_TAX,
                    IN_OBT_EXEU_AMT,
                    IN_OBT_LOSS_AMT,
                    IN_OBT_ETC_AMT,
                    IN_OBT_EXEU_TOT,
                    IN_OBT_WONGA_TOT,
                    IN_OBT_TOTAL_AMT,
                    IN_EAR_RENT_AMT,
                    IN_EAR_RENT_SEC_AMT,
                    IN_EAR_RENT_MON_AMT,
                    IN_EAR_RENT_ETC_AMT,
                    IN_EAR_TOT_AMT,
                    IN_EXP_OPP_AMT,
                    IN_EXP_VAT_AMT,
                    IN_EXP_CORP_TAX,
                    IN_EXP_PROP_TAX,
                    IN_EXP_ESTA_GU,
                    IN_EXP_ESTA_AMT,
                    IN_EXP_ETC_AMT,
                    IN_EXP_TOT_AMT,
                    IN_DIS_GU,
                    IN_DIS_AMT,
                    IN_DIS_ETC_AMT,
                    IN_DIS_TOT_AMT,
                    ITOT_EXPENSE_AMT,
                    ITOT_EARNING_AMT,
                    ITOT_PROFIT_AMT,
                    FNL_PROFIT_AMT,
                    BID_YN)
            VALUES (#{YYYY},
                    #{SEQ},
                    #{AUC_NO},
                    #{COMPETENT_COURT},
                    #{AUC_GU},
                    #{AUC_DEPT},
                    #{AUC_TELNO},
                    #{AUC_DEMUR},
                    #{AUC_CHARGE_AMT},
                    #{AUC_START_DATE},
                    #{AUC_DESC},
                    #{BID_L_AMT},
                    #{BID_L_DAN},
                    #{BID_L_PY_DAN},
                    #{BID_B_AMT},
                    #{BID_B_DAN},
                    #{BID_B_PY_AMT},
                    #{BID_TOT_AMT},
                    #{BID_PL_AMT},
                    #{BID_APPL_RATE},
                    #{DIV_CRED_MAX_AMT},
                    #{DIV_POSS_A_CASE},
                    #{DIV_POSS_A_AMT},
                    #{DIV_PRIOR_MAX_AMT},
                    #{DIV_PRIOR_SHARE_AMT},
                    #{DIV_COMP_MAX_AMT},
                    #{DIV_COMP_SHARE_AMT},
                    #{DIV_COMP_UNR_AMT},
                    #{RIGHT_ALLOT_AMT},
                    #{OBT_AMT},
                    #{TENURE_YEAR},
                    #{STD_PRICE_RATE},
                    #{PLAN_SALE_AMT},
                    #{SALE_AMT},
                    #{SALE_DESC},
                    #{IN_OBT_TAX_RATE},
                    #{IN_OBT_TAX},
                    #{IN_OBT_REG_TAX_RATE},
                    #{IN_OBT_REG_TAX},
                    #{IN_OBT_EXEU_AMT},
                    #{IN_OBT_LOSS_AMT},
                    #{IN_OBT_ETC_AMT},
                    #{IN_OBT_EXEU_TOT},
                    #{IN_OBT_WONGA_TOT},
                    #{IN_OBT_TOTAL_AMT},
                    #{IN_EAR_RENT_AMT},
                    #{IN_EAR_RENT_SEC_AMT},
                    #{IN_EAR_RENT_MON_AMT},
                    #{IN_EAR_RENT_ETC_AMT},
                    #{IN_EAR_TOT_AMT},
                    #{IN_EXP_OPP_AMT},
                    #{IN_EXP_VAT_AMT},
                    #{IN_EXP_CORP_TAX},
                    #{IN_EXP_PROP_TAX},
                    #{IN_EXP_ESTA_GU},
                    #{IN_EXP_ESTA_AMT},
                    #{IN_EXP_ETC_AMT},
                    #{IN_EXP_TOT_AMT},
                    #{IN_DIS_GU},
                    #{IN_DIS_AMT},
                    #{IN_DIS_ETC_AMT},
                    #{IN_DIS_TOT_AMT},
                    #{ITOT_EXPENSE_AMT},
                    #{ITOT_EARNING_AMT},
                    #{ITOT_PROFIT_AMT},
                    #{FNL_PROFIT_AMT},
                    #{BID_YN})
        ]]>
                </update>

    <!-- 저장_41_응찰_기일내역 -->
    <delete id="delete76">
        DELETE
        FROM ES4111
        WHERE YYYY       =  #{년도}
          AND SEQ        =  #{감정순번}

    </delete>
    <insert id="insert76">
        INSERT INTO ES4111(YYYY       ,
                           SEQ        ,
                           LN_SEQ     ,
                           GIIL_DATE  ,
                           GIIL_AMT   ,
                           YUCHAL_YN
        )
        VALUES(#{01_응찰_저장_11_년도}     ,
                   #{01_응찰_저장_11_일련번호} ,
                   #{01_응찰_저장_11_회차}     ,
                   #{01_응찰_저장_11_일자}     ,
                   #{01_응찰_저장_11_금액}     ,
                   #{01_응찰_저장_11_유찰여부}
                  )

    </insert>

    <!-- 저장_42_응찰_전감정개요 -->
    <update id="save77">
                    <![CDATA[
        MERGE INTO ES4112 A
        USING (SELECT #{YYYY} AS YYYY,
                      #{SEQ}  AS SEQ
               FROM DUAL) B
        ON (A.YYYY = B.YYYY AND A.SEQ = B.SEQ)
        WHEN MATCHED THEN
            UPDATE
            SET JUM_ESTI_DATE      = #{JUM_ESTI_DATE},      -- 지점_감정일
                JUM_SABUN1         = #{JUM_SABUN1},         -- 지점_감정자_담당자
                JUM_SABUN2         = #{JUM_SABUN2},         -- 지점_감정자_파트장
                JUM_SABUN3         = #{JUM_SABUN3},         -- 지점_감정자_팀장
                JUM_SABUN4         = #{JUM_SABUN4},         -- 지점_감정자_지점장
                JUM_PL_MIN_BID_AMT = #{JUM_PL_MIN_BID_AMT}, -- 지점_제1차예상입찰가
                JUM_PL_BID_AMT     = #{JUM_PL_BID_AMT},     -- 지점_예상낙찰가
                JUM_PL_BID_RATE    = #{JUM_PL_BID_RATE},    -- 지점_예상낙찰가율
                JUM_SEC_AMT        = #{JUM_SEC_AMT},        -- 지점_담보여력
                JUM_COMP_AMT       = #{JUM_COMP_AMT},       -- 지점_당사채권금액
                JUM_COMP_RIGHT     = #{JUM_COMP_RIGHT},     -- 지점_당사순위및등기권리
                ESTI_DATE          = #{ESTI_DATE},          -- 본사_감정일
                SABUN1             = #{SABUN1},             -- 본사_감정자_1차결재
                SABUN2             = #{SABUN2},             -- 본사_감정자_2차결재
                SABUN3             = #{SABUN3},             -- 본사_감정자_3차결재
                SABUN4             = #{SABUN4},             -- 본사_감정자_관재파트장
                SABUN5             = #{SABUN5},             -- 본사_감정자_팀장
                PL_MIN_BID_AMT     = #{PL_MIN_BID_AMT},     -- 본사_제1차예상입찰가
                PL_BID_AMT         = #{PL_BID_AMT},         -- 본사_예상낙찰가
                PL_BID_RATE        = #{PL_BID_RATE},        -- 본사_예상낙찰가율
                SEC_AMT            = #{SEC_AMT},            -- 본사_담보여력
                COMP_AMT           = #{COMP_AMT},           -- 본사_당사채권금액
                COMP_RIGHT         = #{COMP_RIGHT} -- 본사_당사순위및등기권리
        WHEN NOT MATCHED THEN
            INSERT (YYYY,
                    SEQ,
                    JUM_ESTI_DATE, -- 지점_감정일
                    JUM_SABUN1, -- 지점_감정자_담당자
                    JUM_SABUN2, -- 지점_감정자_파트장
                    JUM_SABUN3, -- 지점_감정자_팀장
                    JUM_SABUN4, -- 지점_감정자_지점장
                    JUM_PL_MIN_BID_AMT, -- 지점_제1차예상입찰가
                    JUM_PL_BID_AMT, -- 지점_예상낙찰가
                    JUM_PL_BID_RATE, -- 지점_예상낙찰가율
                    JUM_SEC_AMT, -- 지점_담보여력
                    JUM_COMP_AMT, -- 지점_당사채권금액
                    JUM_COMP_RIGHT, -- 지점_당사순위및등기권리
                    ESTI_DATE, -- 본사_감정일
                    SABUN1, -- 본사_감정자_1차결재
                    SABUN2, -- 본사_감정자_2차결재
                    SABUN3, -- 본사_감정자_3차결재
                    SABUN4, -- 본사_감정자_관재파트장
                    SABUN5, -- 본사_감정자_팀장
                    PL_MIN_BID_AMT, -- 본사_제1차예상입찰가
                    PL_BID_AMT, -- 본사_예상낙찰가
                    PL_BID_RATE, -- 본사_예상낙찰가율
                    SEC_AMT, -- 본사_담보여력
                    COMP_AMT, -- 본사_당사채권금액
                    COMP_RIGHT -- 본사_당사순위및등기권리
            )
            VALUES (#{YYYY},
                    #{SEQ},
                    #{JUM_ESTI_DATE}, -- 지점_감정일
                    #{JUM_SABUN1}, -- 지점_감정자_담당자
                    #{JUM_SABUN2}, -- 지점_감정자_파트장
                    #{JUM_SABUN3}, -- 지점_감정자_팀장
                    #{JUM_SABUN4}, -- 지점_감정자_지점장
                    #{JUM_PL_MIN_BID_AMT}, -- 지점_제1차예상입찰가
                    #{JUM_PL_BID_AMT}, -- 지점_예상낙찰가
                    #{JUM_PL_BID_RATE}, -- 지점_예상낙찰가율
                    #{JUM_SEC_AMT}, -- 지점_담보여력
                    #{JUM_COMP_AMT}, -- 지점_당사채권금액
                    #{JUM_COMP_RIGHT}, -- 지점_당사순위및등기권리
                    #{ESTI_DATE}, -- 본사_감정일
                    #{SABUN1}, -- 본사_감정자_1차결재
                    #{SABUN2}, -- 본사_감정자_2차결재
                    #{SABUN3}, -- 본사_감정자_3차결재
                    #{SABUN4}, -- 본사_감정자_관재파트장
                    #{SABUN5}, -- 본사_감정자_팀장
                    #{PL_MIN_BID_AMT}, -- 본사_제1차예상입찰가
                    #{PL_BID_AMT}, -- 본사_예상낙찰가
                    #{PL_BID_RATE}, -- 본사_예상낙찰가율
                    #{SEC_AMT}, -- 본사_담보여력
                    #{COMP_AMT}, -- 본사_당사채권금액
                    #{COMP_RIGHT} -- 본사_당사순위및등기권리
                   )
        ]]>
                </update>

    <!-- 저장_43_응찰_선순위권리내역 -->
    <delete id="delete78">
        DELETE
        FROM ES4113
        WHERE YYYY         =  #{년도}
          AND SEQ          =  #{감정순번}

    </delete>
    <insert id="insert78">
        INSERT INTO ES4113(YYYY         ,
                           SEQ          ,
                           LN_SEQ       ,
                           CRED_AMT     ,
                           RIGHT_PERSON ,
                           RIGHT_DESC
        )
        VALUES( #{01_응찰_저장_13_년도}     ,
                    #{01_응찰_저장_13_일련번호} ,
                    #{01_응찰_저장_13_순번}     ,
                    #{01_응찰_저장_13_금액}     ,
                    #{01_응찰_저장_13_권리자}   ,
                    #{01_응찰_저장_13_권리내역}
                  )

    </insert>

    <!-- 저장_44_응찰_선순위부담금액 -->
    <delete id="delete79">
        DELETE
        FROM ES4114
        WHERE YYYY         =  #{년도}
          AND SEQ          =  #{감정순번}

    </delete>
    <insert id="insert79">
        INSERT INTO ES4114(YYYY         ,
                           SEQ          ,
                           LN_SEQ       ,
                           CRED_AMT     ,
                           RIGHT_PERSON ,
                           RIGHT_DESC
        )
        VALUES( #{01_응찰_저장_14_년도}     ,
                    #{01_응찰_저장_14_일련번호} ,
                    #{01_응찰_저장_14_순번}     ,
                    #{01_응찰_저장_14_금액}     ,
                    #{01_응찰_저장_14_권리자}   ,
                    #{01_응찰_저장_14_권리내역}
                  )

    </insert>

    <!-- 저장_감정가_가격사례D -->
    <delete id="delete80">
        DELETE FROM "ES2151"
        WHERE "YYYY"= #{년도}  AND "SEQ"= #{감정순번}
    </delete>
    <insert id="insert80">
        INSERT INTO "ES2151"("YYYY","SEQ","LN_SEQ","RNO","CHECK_YN","B_SIZE","B_SIZE_PY","CURR_MIN_AMT","CURR_MAX_AMT","CURR_AVG_AMT","CURR_PY_DAN","LEASE_AMT","LEASE_RATE")
        VALUES( #{저장_가격사례_D_년도}  ,  #{저장_가격사례_D_일련번호}  ,  #{저장_가격사례_D_사례번호}  ,  #{저장_가격사례_D_생성번호}  ,  #{저장_가격사례_D_선택여부}  ,  #{저장_가격사례_D_면적}  ,  #{저장_가격사례_D_면적_평}  ,  #{저장_가격사례_D_최저가}  ,  #{저장_가격사례_D_최고가}  ,  #{저장_가격사례_D_평균가격}  ,  #{저장_가격사례_D_평당단가}  ,  #{저장_가격사례_D_전세가}  ,  #{저장_가격사례_D_전세가_비율} )
    </insert>

    <!-- 저장_감정가_가격사례M -->
    <delete id="delete81">
        DELETE FROM ES2141
        WHERE YYYY= #{년도} AND SEQ= #{감정순번}
    </delete>
    <insert id="insert81">
        INSERT INTO ES2141(YYYY,SEQ,LN_SEQ,B_NAME,JUSO,B_YEAR,HOUSE_CNT)
        VALUES( #{저장_가격사례_M_년도}  ,  #{저장_가격사례_M_일련번호}  ,  #{저장_가격사례_M_사례번호}  ,  #{저장_가격사례_M_아파트명}  ,  #{저장_가격사례_M_소재지}  ,  #{저장_가격사례_M_건축년도}  ,  #{저장_가격사례_M_세대수} )
    </insert>

    <!-- 저장_감정가_감정_M -->
    <update id="save82">
                    <![CDATA[
        MERGE INTO es2101 a
        USING (SELECT #{YYYY} AS yyyy, #{SEQ} AS seq
               FROM DUAL) b
        ON (a.yyyy = b.yyyy AND a.seq = b.seq)
        WHEN MATCHED THEN
            UPDATE
            SET MA_MAX_AMT=#{MA_MAX_AMT},
                MA_MIN_AMT=#{MA_MIN_AMT},
                MA_RATE=#{MA_RATE},
                PR_MAX_AMT=#{PR_MAX_AMT},
                PR_MIN_AMT=#{PR_MIN_AMT},
                PR_RATE=#{PR_RATE},
                AU_MAX_AMT=#{AU_MAX_AMT},
                AU_MIN_AMT=#{AU_MIN_AMT},
                AU_RATE=#{AU_RATE},
                APPL_AMT=#{APPL_AMT},
                INT_REP_AMT=#{INT_REP_AMT},
                INT_REP_DAN_CODE=#{INT_REP_DAN_CODE},
                INT_REP_DAN=#{INT_REP_DAN},
                INT_REP_SIZE=#{INT_REP_SIZE},
                INT_REP_SIZE_PY=#{INT_REP_SIZE_PY},
                INCREASE_AMT=#{INCREASE_AMT},
                LAST_INCREASE_AMT=#{LAST_INCREASE_AMT}
        WHEN NOT MATCHED THEN
            INSERT (YYYY, SEQ, MA_MAX_AMT, MA_MIN_AMT, MA_RATE, PR_MAX_AMT, PR_MIN_AMT, PR_RATE, AU_MAX_AMT, AU_MIN_AMT,
                    AU_RATE, APPL_AMT, INT_REP_AMT, INT_REP_DAN_CODE, INT_REP_DAN, INT_REP_SIZE, INT_REP_SIZE_PY,
                    INCREASE_AMT, LAST_INCREASE_AMT)
            VALUES (#{YYYY}, #{SEQ}, #{MA_MAX_AMT}, #{MA_MIN_AMT}, #{MA_RATE}, #{PR_MAX_AMT}, #{PR_MIN_AMT}, #{PR_RATE},
                    #{AU_MAX_AMT}, #{AU_MIN_AMT}, #{AU_RATE}, #{APPL_AMT}, #{INT_REP_AMT}, #{INT_REP_DAN_CODE},
                    #{INT_REP_DAN}, #{INT_REP_SIZE}, #{INT_REP_SIZE_PY}, #{INCREASE_AMT}, #{LAST_INCREASE_AMT})
        ]]>
                </update>

    <!-- 저장_감정가_경매사례 -->
    <delete id="delete83">
        DELETE FROM ES2111
        WHERE YYYY= #{년도}  AND SEQ= #{감정순번}
    </delete>
    <insert id="insert83">
        INSERT INTO ES2111(YYYY,SEQ,LN_SEQ,AU_NO,CHECK_YN,B_NAME,JUSO,TOT_FLOOR,FLOOR,B_SIZE,B_SIZE_PY,LAW_AMT,CURR_PY_DAN,BID_AMT,BID_RATE)
        VALUES( #{저장_경매사례_년도}  ,  #{저장_경매사례_일련번호}  ,  (SELECT NVL (MAX (ln_seq), 0) + 1
                                  FROM es2111
                                 WHERE yyyy =  #{저장_경매사례_년도}  AND seq =  #{저장_경매사례_일련번호} )   ,  #{저장_경매사례_경매사건번호}  ,  #{저장_경매사례_선택여부}  ,
  #{저장_경매사례_아파트명}  ,  #{저장_경매사례_소재지}  ,   #{저장_경매사례_총층수}  ,  #{저장_경매사례_층수}  ,  #{저장_경매사례_면적}  ,  #{저장_경매사례_면적_평}  ,  #{저장_경매사례_법원감정가}  , #{저장_경매사례_평당단가} ,  #{저장_경매사례_낙찰가격}  ,  #{저장_경매사례_낙찰가율} )
    </insert>

    <!-- 저장_감정가_본건 -->
    <delete id="delete84">
        DELETE FROM ES2181
        WHERE YYYY=  #{년도}  AND SEQ=  #{감정순번}
    </delete>
    <insert id="insert84">
        INSERT INTO ES2181(YYYY,SEQ,LN_SEQ,CHECK_YN,B_SIZE,B_SIZE_PY,CURR_MIN_AMT,CURR_MAX_AMT,CURR_AVG_AMT,LEASE_AMT,LEASE_RATE, CURR_PY_DAN)
        VALUES(     #{저장_본건_년도}     ,     #{저장_본건_일련번호}     ,  (SELECT NVL (MAX (ln_seq), 0) + 1
                                  FROM es2181
                                 WHERE yyyy =    #{저장_본건_년도}    AND seq =     #{저장_본건_일련번호}    )  ,  #{저장_본건_선택여부}  ,  #{저장_본건_면적}  ,  #{저장_본건_평}  ,
  #{저장_본건_최저가}  ,  #{저장_본건_최고가}  ,  #{저장_본건_평균가격}  ,  #{저장_본건_전세금}  ,  #{저장_본건_전세금비율}, #{저장_본건_평당단가} )
    </insert>

    <!-- 저장_결재자현황_영업 -->
    <update id="save85">
                    <![CDATA[
        UPDATE "ES05"
        SET "YYYY"=#{YYYY},
            "SEQ"=#{SEQ}
        WHERE "DOC_KEY" = #{DOC_KEY}
        ]]>
                </update>

    <!-- 저장_결재자현황_영업_Clear -->
    <update id="save86">
                    <![CDATA[
        UPDATE "ES05"
        SET "YYYY"=NULL,
            "SEQ"=NULL
        WHERE "YYYY" = #{YYYY}
          AND "SEQ" = #{SEQ}
        ]]>
                </update>

    <!-- 저장_규제의표시 -->
    <update id="save87">
                    <![CDATA[
        MERGE INTO es2017 a
        USING (SELECT #{YYYY} AS yyyy, #{SEQ} AS seq
               FROM DUAL) b
        ON (a.yyyy = b.yyyy AND a.seq = b.seq)
        WHEN MATCHED THEN
            UPDATE
            SET REST_PL_USE=#{REST_PL_USE},
                REST_OT_LAW=#{REST_OT_LAW},
                REST_EN_RULE=#{REST_EN_RULE},
                REST_FU_LAW=#{REST_FU_LAW}
        WHEN NOT MATCHED THEN
            INSERT (YYYY, SEQ, REST_PL_USE, REST_OT_LAW, REST_EN_RULE, REST_FU_LAW)
            VALUES (#{YYYY}, #{SEQ}, #{REST_PL_USE}, #{REST_OT_LAW}, #{REST_EN_RULE}, #{REST_FU_LAW})
        ]]>
                </update>

    <!-- 저장_낙찰가율보정표 -->
    <update id="save88">
                    <![CDATA[
        MERGE INTO es2301 a
        USING (SELECT #{YYYY} AS yyyy, #{SEQ} AS seq
               FROM DUAL) b
        ON (a.yyyy = b.yyyy AND a.seq = b.seq)
        WHEN MATCHED THEN
            UPDATE
            SET P_BID_RATE=#{P_BID_RATE},
                K_BID_RATE=#{K_BID_RATE},
                B_BID_RATE=#{B_BID_RATE},
                APPL_RATE=#{APPL_RATE},
                RIGHTS_CODE=#{RIGHTS_CODE},
                RIGHTS_RATE=#{RIGHTS_RATE},
                INCREASE_AMT=#{INCREASE_AMT},
                PL_MIN_BID_AMT=#{PL_MIN_BID_AMT},
                PL_BID_AMT=#{PL_BID_AMT},
                APT_SCALE=#{APT_SCALE},
                APT_SCALE_RATE=#{APT_SCALE_RATE},
                APT_EXM_SIZE=#{APT_EXM_SIZE},
                APT_EXM_RATE=#{APT_EXM_RATE},
                APT_FLOOR_CODE=#{APT_FLOOR_CODE},
                APT_FLOOR_RATE=#{APT_FLOOR_RATE},
                APT_ELAP_CODE=#{APT_ELAP_CODE},
                APT_ELAP_RATE=#{APT_ELAP_RATE},
                MUL_ADJ_ROAD=#{MUL_ADJ_ROAD},
                MUL_ADJ_RATE=#{MUL_ADJ_RATE},
                MUL_EXM_SIZE=#{MUL_EXM_SIZE},
                MUL_EXM_RATE=#{MUL_EXM_RATE},
                MUL_FLOOR_CODE=#{MUL_FLOOR_CODE},
                MUL_FLOOR_RATE=#{MUL_FLOOR_RATE},
                MUL_ELAP_CODE=#{MUL_ELAP_CODE},
                MUL_ELAP_RATE=#{MUL_ELAP_RATE},
                OFF_EXM_SIZE=#{OFF_EXM_SIZE},
                OFF_EXM_RATE=#{OFF_EXM_RATE},
                OFF_CONV_LOCATED=#{OFF_CONV_LOCATED},
                OFF_CONV_RATE=#{OFF_CONV_RATE},
                OFF_FLOOR_CODE=#{OFF_FLOOR_CODE},
                OFF_FLOOR_RATE=#{OFF_FLOOR_RATE},
                OFF_ELAP_CODE=#{OFF_ELAP_CODE},
                OFF_ELAP_RATE=#{OFF_ELAP_RATE},
                BUS_APPRO_CODE=#{BUS_APPRO_CODE},
                BUS_APPRO_RATE=#{BUS_APPRO_RATE},
                BUS_FLOOR_LOC=#{BUS_FLOOR_LOC},
                BUS_FLOOR_RATE=#{BUS_FLOOR_RATE},
                BUS_COMM_DEV=#{BUS_COMM_DEV},
                BUS_COMM_RATE=#{BUS_COMM_RATE},
                BUS_ELAP_CODE=#{BUS_ELAP_CODE},
                BUS_ELAP_RATE=#{BUS_ELAP_RATE}
        WHEN NOT MATCHED THEN
            INSERT (YYYY, SEQ, P_BID_RATE, K_BID_RATE, B_BID_RATE, APPL_RATE, RIGHTS_CODE, RIGHTS_RATE, INCREASE_AMT,
                    PL_MIN_BID_AMT, PL_BID_AMT, APT_SCALE, APT_SCALE_RATE, APT_EXM_SIZE, APT_EXM_RATE, APT_FLOOR_CODE,
                    APT_FLOOR_RATE, APT_ELAP_CODE, APT_ELAP_RATE, MUL_ADJ_ROAD, MUL_ADJ_RATE, MUL_EXM_SIZE,
                    MUL_EXM_RATE, MUL_FLOOR_CODE, MUL_FLOOR_RATE, MUL_ELAP_CODE, MUL_ELAP_RATE, OFF_EXM_SIZE,
                    OFF_EXM_RATE, OFF_CONV_LOCATED, OFF_CONV_RATE, OFF_FLOOR_CODE, OFF_FLOOR_RATE, OFF_ELAP_CODE,
                    OFF_ELAP_RATE, BUS_APPRO_CODE, BUS_APPRO_RATE, BUS_FLOOR_LOC, BUS_FLOOR_RATE, BUS_COMM_DEV,
                    BUS_COMM_RATE, BUS_ELAP_CODE, BUS_ELAP_RATE)
            VALUES (#{YYYY}, #{SEQ}, #{P_BID_RATE}, #{K_BID_RATE}, #{B_BID_RATE}, #{APPL_RATE}, #{RIGHTS_CODE},
                    #{RIGHTS_RATE}, #{INCREASE_AMT}, #{PL_MIN_BID_AMT}, #{PL_BID_AMT}, #{APT_SCALE}, #{APT_SCALE_RATE},
                    #{APT_EXM_SIZE}, #{APT_EXM_RATE}, #{APT_FLOOR_CODE}, #{APT_FLOOR_RATE}, #{APT_ELAP_CODE},
                    #{APT_ELAP_RATE}, #{MUL_ADJ_ROAD}, #{MUL_ADJ_RATE}, #{MUL_EXM_SIZE}, #{MUL_EXM_RATE},
                    #{MUL_FLOOR_CODE}, #{MUL_FLOOR_RATE}, #{MUL_ELAP_CODE}, #{MUL_ELAP_RATE}, #{OFF_EXM_SIZE},
                    #{OFF_EXM_RATE}, #{OFF_CONV_LOCATED}, #{OFF_CONV_RATE}, #{OFF_FLOOR_CODE}, #{OFF_FLOOR_RATE},
                    #{OFF_ELAP_CODE}, #{OFF_ELAP_RATE}, #{BUS_APPRO_CODE}, #{BUS_APPRO_RATE}, #{BUS_FLOOR_LOC},
                    #{BUS_FLOOR_RATE}, #{BUS_COMM_DEV}, #{BUS_COMM_RATE}, #{BUS_ELAP_CODE}, #{BUS_ELAP_RATE})
        ]]>
                </update>

    <!-- 저장_담보마스타_담보여력등 -->
    <update id="save89">
                    <![CDATA[
        UPDATE ES10
        SET (SHARE_YN,
             PRE_BOND_AMT,
             SPARE_SEC_AMT,
             EXCEED_AMT,
             EXCEED_YN) = (SELECT #{02_배당표수정여부},
                                  채권금액,
                                  담보여력_설정전,
                                  초과_부족설정액,
                                  초과_부족설정구분
                           FROM V_ES10_01
                           WHERE YYYY = #{YYYY}
                             AND SEQ = #{SEQ})
        WHERE YYYY = #{YYYY}
          AND SEQ = #{SEQ}
        ]]>
                </update>

    <!-- 저장_담보마스터 -->
    <update id="save90">
                    <![CDATA[
        MERGE INTO ES10 A
        USING (SELECT #{YYYY} AS YYYY, #{SEQ} AS SEQ
               FROM DUAL) B
        ON (A.YYYY = B.YYYY AND A.SEQ = B.SEQ)
        WHEN MATCHED THEN
            UPDATE
            SET GEO_CODE            = #{GEO_CODE},            -- 거래처코드
                SANGHO              = #{SANGHO},              -- 거래처명
                DAEPYO_NAME         = #{DAEPYO_NAME},         -- 거래처대표자
                MARKET_DIV          = #{MARKET_DIV},          -- 업소구분
                MARKET_NAME         = #{MARKET_NAME},         -- 업소명
                MARKET_CEO          = #{MARKET_CEO},          -- 업소대표자
                DEBTOR              = #{DEBTOR},              -- 채무자
                POSS_OWNER          = #{POSS_OWNER},          -- 소유자
                GUARANTOR           = #{GUARANTOR},           -- 담보제공자
                DEBTOR_RELATION     = #{DEBTOR_RELATION},     -- 채무자와담보제공자와의관계
                B_USE_CODE          = #{B_USE_CODE},          -- 건축물의용도
                B_USE_DESC          = #{B_USE_DESC},          -- 건축물의용도비고
                B_NAME              = #{B_NAME},              -- 건물의명칭및호수
                JUSO1               = #{JUSO1},               -- 부동산표시_주소1
                JUSO2               = #{JUSO2},               -- 부동산표시_주소2
                L_SIZE              = #{L_SIZE},              -- 토지면적
                L_SIZE_PY           = #{L_SIZE_PY},           -- 토지면적_평
                B_SIZE              = #{B_SIZE},              -- 건물면적
                B_SIZE_PY           = #{B_SIZE_PY},           -- 건물면적_평
                CURR_AMT            = #{CURR_AMT},            -- 시가
                INCREASE_AMT        = #{INCREASE_AMT},        -- 평가가격
                PLMIN_BID_AMT       = #{PLMIN_BID_AMT},       -- 예상1차최저입찰가
                PL_BID_AMT          = #{PL_BID_AMT},          -- 예상낙찰가
                APPL_RATE           = #{APPL_RATE},           -- 적용할낙찰가율
                C_CL_AMT            = #{C_CL_AMT},            -- 동시설정한도액
                L_CL_AMT            = #{L_CL_AMT},            -- 토지설정한도액
                B_CL_AMT            = #{B_CL_AMT},            -- 건물설정한도액
                C_PL_RANK           = #{C_PL_RANK},           -- 동시설정예정액_순위
                C_PL_AMT            = #{C_PL_AMT},            -- 동시설정예정액_금액
                L_PL_RANK           = #{L_PL_RANK},           -- 토지설정예정액_순위
                L_PL_AMT            = #{L_PL_AMT},            -- 토지설정예정액_금액
                B_PL_RANK           = #{B_PL_RANK},           -- 건물설정예정액_순위
                B_PL_AMT            = #{B_PL_AMT},            -- 건물설정예정액_금액
                MANA_L_SIZE         = #{MANA_L_SIZE},         -- 관재_토지면적
                MANA_L_SIZE_PY      = #{MANA_L_SIZE_PY},      -- 관재_토지면적_평
                MANA_B_SIZE         = #{MANA_B_SIZE},         -- 관재_건물면적
                MANA_B_SIZE_PY      = #{MANA_B_SIZE_PY},      -- 관재_건물면적_평
                MANA_CURR_AMT       = #{MANA_CURR_AMT},       -- 관재_시가
                MANA_PL_MIN_BID_AMT = #{MANA_PL_MIN_BID_AMT}, -- 관재_예상1차최저입찰가
                MANA_PL_BID_AMT     = #{MANA_PL_BID_AMT},     -- 관재_예상낙찰가
                MANA_C_CL_AMT       = #{MANA_C_CL_AMT},       -- 관재_동시설정한도액
                MANA_L_CL_AMT       = #{MANA_L_CL_AMT},       -- 관재_토지설정한도액
                MANA_B_CL_AMT       = #{MANA_B_CL_AMT},       -- 관재_건물설정한도액
                MANA_C_PL_RANK      = #{MANA_C_PL_RANK},      -- 관재_동시설정예정액_순위
                MANA_C_PL_AMT       = #{MANA_C_PL_AMT},       -- 관재_동시설정예정액_금액
                MANA_L_PL_RANK      = #{MANA_L_PL_RANK},      -- 관재_토지설정예정액_순위
                MANA_L_PL_AMT       = #{MANA_L_PL_AMT},       -- 관재_토지설정예정액_금액
                MANA_B_PL_RANK      = #{MANA_B_PL_RANK},      -- 관재_건물설정예정액_순위
                MANA_B_PL_AMT       = #{MANA_B_PL_AMT},       -- 관재_건물설정예정액_금액
                JUM_SABUN           = #{JUM_SABUN},           -- 지점_최초감정자사번
                JUM_COMP_DATE       = #{JUM_COMP_DATE},       -- 지점_결재완료일자
                JUM_TRAN_DATE       = #{JUM_TRAN_DATE},       -- 지점_전송일자
                JUM_TRAN_SABUN      = #{JUM_TRAN_SABUN},      -- 지점_전송자사번
                MANA_RECE_DATE      = #{MANA_RECE_DATE},      -- 관재_접수일자
                MANA_RECE_SABUN     = #{MANA_RECE_SABUN},     -- 관재_접수자사번
                MANA_COMP_DATE      = #{MANA_COMP_DATE},      -- 관재_결재완료일자
                PROC_DIV            = #{PROC_DIV},            -- 작업진행상태
                DOC_KEY             = #{DOC_KEY},             -- 문서번호
                APPRAISE_GU         = #{APPRAISE_GU},         -- 평가구분
                PRE_YYYY            = #{PRE_YYYY},            -- 이전년도
                PRE_SEQ             = #{PRE_SEQ}--,                -- 이전담보순번
        WHEN NOT MATCHED THEN
            INSERT (YYYY, -- 년도
                    SEQ, -- 일련번호
                    SEC_CODE, -- 담보종류
                    JUM_CODE, -- 지점코드
                    REQ_JUM, -- 의뢰한지점코드
                    ESTI_DATE, -- 담보감정일자
                    GEO_CODE, -- 거래처코드
                    SANGHO, -- 거래처명
                    DAEPYO_NAME, -- 거래처대표자
                    MARKET_DIV, -- 업소구분
                    MARKET_NAME, -- 업소명
                    MARKET_CEO, -- 업소대표자
                    DEBTOR, -- 채무자
                    POSS_OWNER, -- 소유자
                    GUARANTOR, -- 담보제공자
                    DEBTOR_RELATION, -- 채무자와담보제공자와의관계
                    B_USE_CODE, -- 건축물의용도
                    B_USE_DESC, -- 건축물의용도비고
                    B_NAME, -- 건물의명칭및호수
                    JUSO1, -- 부동산표시_주소1
                    JUSO2, -- 부동산표시_주소2
                    L_SIZE, -- 토지면적
                    L_SIZE_PY, -- 토지면적_평
                    B_SIZE, -- 건물면적
                    B_SIZE_PY, -- 건물면적_평
                    CURR_AMT, -- 시가
                    INCREASE_AMT, -- 평가가격
                    PLMIN_BID_AMT, -- 예상1차최저입찰가
                    PL_BID_AMT, -- 예상낙찰가
                    APPL_RATE, -- 적용할낙찰가율
                    PRE_BOND_AMT, -- 선순위채권액
                    SPARE_SEC_AMT, -- 담보여력
                    EXCEED_YN, -- 초과/부족구분
                    EXCEED_AMT, -- 초과/부족금액
                    C_CL_AMT, -- 동시설정한도액
                    L_CL_AMT, -- 토지설정한도액
                    B_CL_AMT, -- 건물설정한도액
                    C_PL_RANK, -- 동시설정예정액_순위
                    C_PL_AMT, -- 동시설정예정액_금액
                    L_PL_RANK, -- 토지설정예정액_순위
                    L_PL_AMT, -- 토지설정예정액_금액
                    B_PL_RANK, -- 건물설정예정액_순위
                    B_PL_AMT, -- 건물설정예정액_금액
                    MANA_L_SIZE, -- 관재_토지면적
                    MANA_L_SIZE_PY, -- 관재_토지면적_평
                    MANA_B_SIZE, -- 관재_건물면적
                    MANA_B_SIZE_PY, -- 관재_건물면적_평
                    MANA_CURR_AMT, -- 관재_시가
                    MANA_PL_MIN_BID_AMT, -- 관재_예상1차최저입찰가
                    MANA_PL_BID_AMT, -- 관재_예상낙찰가
                    MANA_C_CL_AMT, -- 관재_동시설정한도액
                    MANA_L_CL_AMT, -- 관재_토지설정한도액
                    MANA_B_CL_AMT, -- 관재_건물설정한도액
                    MANA_C_PL_RANK, -- 관재_동시설정예정액_순위
                    MANA_C_PL_AMT, -- 관재_동시설정예정액_금액
                    MANA_L_PL_RANK, -- 관재_토지설정예정액_순위
                    MANA_L_PL_AMT, -- 관재_토지설정예정액_금액
                    MANA_B_PL_RANK, -- 관재_건물설정예정액_순위
                    MANA_B_PL_AMT, -- 관재_건물설정예정액_금액
                    JUM_SABUN, -- 지점_최초감정자사번
                    JUM_COMP_DATE, -- 지점_결재완료일자
                    JUM_TRAN_DATE, -- 지점_전송일자
                    JUM_TRAN_SABUN, -- 지점_전송자사번
                    MANA_RECE_DATE, -- 관재_접수일자
                    MANA_RECE_SABUN, -- 관재_접수자사번
                    MANA_COMP_DATE, -- 관재_결재완료일자
                    PROC_DIV, -- 작업진행상태
                    RES_PL_BID_AMT, -- 탁상감정가
                    DOC_KEY, -- 문서번호
                    BID_USE_YN,
                    APPRAISE_GU,
                    PRE_YYYY, --이전년도
                    PRE_SEQ, --이전담보순번
                    LIQUOR_TYPE -- 사업부문
            )
            VALUES (#{YYYY}, -- 년도
                    #{SEQ}, -- 일련번호
                    #{SEC_CODE}, -- 담보종류
                    #{JUM_CODE}, -- 지점코드
                    #{REQ_JUM}, -- 의뢰한지점코드
                    #{ESTI_DATE}, -- 담보감정일자
                    #{GEO_CODE}, -- 거래처코드
                    #{SANGHO}, -- 거래처명
                    #{DAEPYO_NAME}, -- 거래처대표자
                    #{MARKET_DIV}, -- 업소구분
                    #{MARKET_NAME}, -- 업소명
                    #{MARKET_CEO}, -- 업소대표자
                    #{DEBTOR}, -- 채무자
                    #{POSS_OWNER}, -- 소유자
                    #{GUARANTOR}, -- 담보제공자
                    #{DEBTOR_RELATION}, -- 채무자와담보제공자와의관계
                    #{B_USE_CODE}, -- 건축물의용도
                    #{B_USE_DESC}, -- 건축물의용도비고
                    #{B_NAME}, -- 건물의명칭및호수
                    #{JUSO1}, -- 부동산표시_주소1
                    #{JUSO2}, -- 부동산표시_주소2
                    #{L_SIZE}, -- 토지면적
                    #{L_SIZE_PY}, -- 토지면적_평
                    #{B_SIZE}, -- 건물면적
                    #{B_SIZE_PY}, -- 건물면적_평
                    #{CURR_AMT}, -- 시가
                    #{INCREASE_AMT}, -- 평가가격
                    #{PLMIN_BID_AMT}, -- 예상1차최저입찰가
                    #{PL_BID_AMT}, -- 예상낙찰가
                    #{APPL_RATE}, -- 적용할낙찰가율
                    #{PRE_BOND_AMT}, -- 선순위채권액
                    #{SPARE_SEC_AMT}, -- 담보여력
                    #{EXCEED_YN}, -- 초과/부족구분
                    #{EXCEED_AMT}, -- 초과/부족금액
                    #{C_CL_AMT}, -- 동시설정한도액
                    #{L_CL_AMT}, -- 토지설정한도액
                    #{B_CL_AMT}, -- 건물설정한도액
                    #{C_PL_RANK}, -- 동시설정예정액_순위
                    #{C_PL_AMT}, -- 동시설정예정액_금액
                    #{L_PL_RANK}, -- 토지설정예정액_순위
                    #{L_PL_AMT}, -- 토지설정예정액_금액
                    #{B_PL_RANK}, -- 건물설정예정액_순위
                    #{B_PL_AMT}, -- 건물설정예정액_금액
                    #{MANA_L_SIZE}, -- 관재_토지면적
                    #{MANA_L_SIZE_PY}, -- 관재_토지면적_평
                    #{MANA_B_SIZE}, -- 관재_건물면적
                    #{MANA_B_SIZE_PY}, -- 관재_건물면적_평
                    #{MANA_CURR_AMT}, -- 관재_시가
                    #{MANA_PL_MIN_BID_AMT}, -- 관재_예상1차최저입찰가
                    #{MANA_PL_BID_AMT}, -- 관재_예상낙찰가
                    #{MANA_C_CL_AMT}, -- 관재_동시설정한도액
                    #{MANA_L_CL_AMT}, -- 관재_토지설정한도액
                    #{MANA_B_CL_AMT}, -- 관재_건물설정한도액
                    #{MANA_C_PL_RANK}, -- 관재_동시설정예정액_순위
                    #{MANA_C_PL_AMT}, -- 관재_동시설정예정액_금액
                    #{MANA_L_PL_RANK}, -- 관재_토지설정예정액_순위
                    #{MANA_L_PL_AMT}, -- 관재_토지설정예정액_금액
                    #{MANA_B_PL_RANK}, -- 관재_건물설정예정액_순위
                    #{MANA_B_PL_AMT}, -- 관재_건물설정예정액_금액
                    #{JUM_SABUN}, -- 지점_최초감정자사번
                    #{JUM_COMP_DATE}, -- 지점_결재완료일자
                    #{JUM_TRAN_DATE}, -- 지점_전송일자
                    #{JUM_TRAN_SABUN}, -- 지점_전송자사번
                    #{MANA_RECE_DATE}, -- 관재_접수일자
                    #{MANA_RECE_SABUN}, -- 관재_접수자사번
                    #{MANA_COMP_DATE}, -- 관재_결재완료일자
                    #{PROC_DIV}, -- 작업진행상태
                    #{RES_PL_BID_AMT}, -- 탁상감정가
                    #{DOC_KEY}, -- 문서번호
                    #{BID_USE_YN},
                    #{APPRAISE_GU},
                    #{PRE_YYYY},
                    #{PRE_SEQ},
                    #{LIQUOR_TYPE} -- 사업부문
                   )
        ]]>
                </update>

    <!-- 저장_문서관리 -->
    <delete id="delete91">
        DELETE FROM ES2311
        WHERE YYYY= #{년도}  AND SEQ= #{감정순번}
    </delete>
    <insert id="insert91">
        INSERT INTO ES2311(YYYY,SEQ,PHOTO_DIV,LN_SEQ,PHOTO_NAME,FILE_NAME,REMARK,UPLOAD_FILE)
        VALUES( #{저장_문서관리_년도}  ,  #{저장_문서관리_일련번호}  ,  #{저장_문서관리_사진구분}  ,   #{저장_문서관리_순번}  ,  #{저장_문서관리_사진명}  ,  #{저장_문서관리_경로및파일명}  ,  #{저장_문서관리_비고},  #{저장_문서관리_전송된사진명}  )
    </insert>

    <!-- 저장_문서관리_문서 -->
    <delete id="delete92">
        DELETE FROM ES2311
        WHERE YYYY= #{년도}  AND SEQ= #{감정순번}
    </delete>
    <insert id="insert92">
        INSERT INTO ES2311(YYYY,SEQ,PHOTO_DIV,LN_SEQ,PHOTO_NAME,FILE_NAME,REMARK,UPLOAD_FILE)
        VALUES( #{저장_문서관리_문서_년도}  ,  #{저장_문서관리_문서_일련번호}  ,  #{저장_문서관리_문서_사진구분}  ,   #{저장_문서관리_문서_순번}  ,  #{저장_문서관리_문서_사진명}  ,  #{저장_문서관리_문서_경로및파일명}  ,  #{저장_문서관리_문서_비고},  #{저장_문서관리_문서_전송된파일명}  )
    </insert>

    <!-- 저장_배당금_배당금 -->
    <delete id="delete93">
        DELETE FROM "ES2404"
        WHERE "YYYY"= #{년도}  AND "SEQ"= #{감정순번} AND "SHA_GU"='1' AND "LN_SEQ"= 0
    </delete>
    <insert id="insert93">
        INSERT INTO es2404 ("YYYY","SEQ","SHA_GU","LN_SEQ","RANK","DISP_RANK","RIGHT_DATE","RIGHT_PERSON","RIGHT_CODE","ERA_YN","CRED_SELF_AMT","CRED_COMB_AMT", PRO_RATE_CODE , HITE_YN )
        VALUES( #{저장_배당표_배당금_년도}  ,  #{저장_배당표_배당금_일련번호}  , '1' , 0, (SELECT NVL (MAX (rank), 0) + 1
          FROM es2404
         WHERE yyyy =  #{저장_배당표_배당금_년도}  AND seq =  #{저장_배당표_배당금_일련번호} ) ,  #{저장_배당표_배당금_표시순위},  #{저장_배당표_배당금_발생일자}  ,  #{저장_배당표_배당금_권리자}  ,  #{저장_배당표_배당금_권리의내용}  ,  #{저장_배당표_배당금_말소여부}  ,  #{저장_배당표_배당금_단독담보}  ,  #{저장_배당표_배당금_공동담보} , #{저장_배당표_배당금_배당순위} , #{저장_배당표_배당금_당사설정} )
    </insert>

    <!-- 저장_배당금_배당표M -->
    <update id="save94">
                    <![CDATA[
        MERGE INTO es2401 a
        USING (SELECT #{YYYY} AS yyyy, #{SEQ} AS seq
               FROM DUAL) b
        ON (a.yyyy = b.yyyy AND a.seq = b.seq)
        WHEN MATCHED THEN
            UPDATE
            SET "AUCTION_CODE"=#{AUCTION_CODE},
                "AUCTION_AMT"=#{AUCTION_AMT},
                "CRED_MAX_AMT"= #{CRED_MAX_AMT},
                "H_PL_BID_AMT"=#{H_PL_BID_AMT},
                "H_POSS_AMT"=#{H_POSS_AMT},
                "H_POSS_A_AREA"=#{H_POSS_A_AREA},
                "H_POSS_A_AMT"=#{H_POSS_A_AMT},
                "B_PL_BID_AMT"=#{B_PL_BID_AMT},
                "B_POSS_AMT"=#{B_POSS_AMT},
                "B_LEASE_AREA"=#{B_LEASE_AREA},
                "B_LEASE_AMT"=#{B_LEASE_AMT},
                "B_POSS_A_AREA"=#{B_POSS_A_AREA},
                "B_POSS_A_AMT"=#{B_POSS_A_AMT}
        WHEN NOT MATCHED THEN
            INSERT ("YYYY", "SEQ", "AUCTION_CODE", "AUCTION_AMT", "CRED_MAX_AMT", "H_PL_BID_AMT", "H_POSS_AMT",
                    "H_POSS_A_AREA", "H_POSS_A_AMT", "B_PL_BID_AMT", "B_POSS_AMT", "B_LEASE_AREA", "B_LEASE_AMT",
                    "B_POSS_A_AREA", "B_POSS_A_AMT")
            VALUES (#{YYYY}, #{SEQ}, #{AUCTION_CODE}, #{AUCTION_AMT}, #{CRED_MAX_AMT}, #{H_PL_BID_AMT}, #{H_POSS_AMT},
                    #{H_POSS_A_AREA}, #{H_POSS_A_AMT}, #{B_PL_BID_AMT}, #{B_POSS_AMT}, #{B_LEASE_AREA}, #{B_LEASE_AMT},
                    #{B_POSS_A_AREA}, #{B_POSS_A_AMT})
        ]]>
                </update>

    <!-- 저장_배당금_주택임차보증금 -->
    <delete id="delete95">
        DELETE FROM "ES2402"
        WHERE "YYYY"= #{년도}  AND "SEQ"= #{감정순번}
    </delete>
    <insert id="insert95">
        INSERT INTO "ES2402"("YYYY","SEQ","RNO","RESI_NAME","RESI_RM_CNT","FXDATE_YN","POSS_A_RM_CNT","LEASE_AMT","REP_BE_SEC_AMT","REP_AF_SEC_AMT","FXLEA_AMT","FXLEA_NO_AMT")
        VALUES( #{저장_배당표_년도} , #{저장_배당표_일련번호} , #{저장_배당표_각구의일련번호} , #{저장_배당표_각구의위치} , #{저장_배당표_주거용방의총수} , #{저장_배당표_확정일자보유여부} , #{저장_배당표_적용한방의총수} , #{저장_배당표_실제임대차보증금} , #{저장_배당표_최종적용임대차보증금} , NULL , #{저장_배당표_확정_임대차보증금} , #{저장_배당표_확정없는_임대차보증금} )
    </insert>

    <!-- 저장_입력표 -->
    <update id="save96">
                    <![CDATA[
        MERGE INTO es2011 a
        USING (SELECT #{YYYY} AS yyyy, #{SEQ} AS seq
               FROM DUAL) b
        ON (a.yyyy = b.yyyy AND a.seq = b.seq)
        WHEN MATCHED THEN
            UPDATE
            SET JUSO1=#{JUSO1},
                JUSO2=#{JUSO2},
                LOT_NUM=#{LOT_NUM},
                CB_NAME=#{CB_NAME},
                DONG=#{DONG},
                HO=#{HO},
                LCATEGORY=#{LCATEGORY},
                LG_OWNER_YN=#{LG_OWNER_YN},
                LG_OWNER=#{LG_OWNER},
                LG_SIZE=#{LG_SIZE},
                POSS_A_AREA=#{POSS_A_AREA},
                CB_STRUC=#{CB_STRUC},
                CB_ROOF=#{CB_ROOF},
                CB_UPFLOOR=#{CB_UPFLOOR},
                CB_DNFLOOR=#{CB_DNFLOOR},
                CB_FLOOR=#{CB_FLOOR},
                CB_YYYY=#{CB_YYYY},
                ELAP_YEAR=#{ELAP_YEAR},
                NUM_HOUSEHOLD=#{NUM_HOUSEHOLD},
                NUM_YEAR=#{NUM_YEAR},
                CB_EXM_SIZE=#{CB_EXM_SIZE},
                CB_EXM_SIZE_PY=#{CB_EXM_SIZE_PY},
                CB_PUB_SIZE=#{CB_PUB_SIZE},
                CB_PUB_SIZE_PY=#{CB_PUB_SIZE_PY},
                CB_TOT_SIZE=#{CB_TOT_SIZE},
                CB_TOT_SIZE_PY=#{CB_TOT_SIZE_PY},
                OF_GU=#{OF_GU},
                OF_HEATER_YN=#{OF_HEATER_YN},
                OF_FLOOR=#{OF_FLOOR},
                OF_FLOOR_IDX=#{OF_FLOOR_IDX},
                OF_PLACE=#{OF_PLACE},
                OF_PLACE_IDX=#{OF_PLACE_IDX},
                OF_JANGA_RATE=#{OF_JANGA_RATE},
                OF_ROAD_CODE=#{OF_ROAD_CODE},
                OF_ACCESS_CODE=#{OF_ACCESS_CODE},
                OF_ETC=#{OF_ETC},
                OF_ETC_IDX=#{OF_ETC_IDX},
                REGI_AMT=#{REGI_AMT},
                REGI_DAN=#{REGI_DAN},
                REGI_DAN_PY=#{REGI_DAN_PY},
                BASE_AMT=#{BASE_AMT},
                BASE_DAN=#{BASE_DAN},
                BASE_DAN_PY=#{BASE_DAN_PY},
                SEC_REGI_SIZE=#{SEC_REGI_SIZE},
                SEC_NUME=#{SEC_NUME},
                SEC_DENO=#{SEC_DENO},
                SEC_RATE=#{SEC_RATE},
                SEC_OFFER_SIZE=#{SEC_OFFER_SIZE},
                SEC_DESC=#{SEC_DESC},
                INC_AMT=#{INC_AMT},
                FNL_INC_AMT=#{FNL_INC_AMT}
        WHEN NOT MATCHED THEN
            INSERT (YYYY, SEQ, JUSO1, JUSO2, LOT_NUM, CB_NAME, DONG, HO, LCATEGORY, LG_OWNER_YN, LG_OWNER, LG_SIZE,
                    POSS_A_AREA, CB_STRUC, CB_ROOF, CB_UPFLOOR, CB_DNFLOOR, CB_FLOOR, CB_YYYY, ELAP_YEAR, NUM_HOUSEHOLD,
                    NUM_YEAR, CB_EXM_SIZE, CB_EXM_SIZE_PY, CB_PUB_SIZE, CB_PUB_SIZE_PY, CB_TOT_SIZE, CB_TOT_SIZE_PY,
                    OF_GU, OF_HEATER_YN, OF_FLOOR, OF_FLOOR_IDX, OF_PLACE, OF_PLACE_IDX, OF_JANGA_RATE, OF_ROAD_CODE,
                    OF_ACCESS_CODE, OF_ETC, OF_ETC_IDX, REGI_AMT, REGI_DAN, REGI_DAN_PY, BASE_AMT, BASE_DAN,
                    BASE_DAN_PY, SEC_REGI_SIZE, SEC_NUME, SEC_DENO, SEC_RATE, SEC_OFFER_SIZE, SEC_DESC, INC_AMT,
                    FNL_INC_AMT)
            VALUES (#{YYYY}, #{SEQ}, #{JUSO1}, #{JUSO2}, #{LOT_NUM}, #{CB_NAME}, #{DONG}, #{HO}, #{LCATEGORY},
                    #{LG_OWNER_YN}, #{LG_OWNER}, #{LG_SIZE}, #{POSS_A_AREA}, #{CB_STRUC}, #{CB_ROOF}, #{CB_UPFLOOR},
                    #{CB_DNFLOOR}, #{CB_FLOOR}, #{CB_YYYY}, #{ELAP_YEAR}, #{NUM_HOUSEHOLD}, #{NUM_YEAR}, #{CB_EXM_SIZE},
                    #{CB_EXM_SIZE_PY}, #{CB_PUB_SIZE}, #{CB_PUB_SIZE_PY}, #{CB_TOT_SIZE}, #{CB_TOT_SIZE_PY}, #{OF_GU},
                    #{OF_HEATER_YN}, #{OF_FLOOR}, #{OF_FLOOR_IDX}, #{OF_PLACE}, #{OF_PLACE_IDX}, #{OF_JANGA_RATE},
                    #{OF_ROAD_CODE}, #{OF_ACCESS_CODE}, #{OF_ETC}, #{OF_ETC_IDX}, #{REGI_AMT}, #{REGI_DAN},
                    #{REGI_DAN_PY}, #{BASE_AMT}, #{BASE_DAN}, #{BASE_DAN_PY}, #{SEC_REGI_SIZE}, #{SEC_NUME},
                    #{SEC_DENO}, #{SEC_RATE}, #{SEC_OFFER_SIZE}, #{SEC_DESC}, #{INC_AMT}, #{FNL_INC_AMT})
        ]]>
                </update>

    <!-- 저장_탁상감정 -->
    <update id="save97">
                    <![CDATA[
        MERGE INTO es01 a
        USING (SELECT #{YYYY} AS yyyy, #{SEQ} AS seq
               FROM DUAL) b
        ON (a.yyyy = b.yyyy AND a.seq = b.seq)
        WHEN MATCHED THEN
            UPDATE
            SET "REQ_DATE"=#{REQ_DATE},
                "RES_DATE"=#{RES_DATE},
                "RES_PL_BID_AMT"=#{RES_PL_BID_AMT},
                "ESTI_OPI"=#{ESTI_OPI}
        WHEN NOT MATCHED THEN
            INSERT ("YYYY", "SEQ", "REQ_DATE", "RES_DATE", "ESTI_OPI", "RES_PL_BID_AMT")
            VALUES (#{YYYY}, #{SEQ}, #{REQ_DATE}, #{RES_DATE}, #{ESTI_OPI}, #{RES_PL_BID_AMT})
        ]]>
                </update>

    <!-- 저장_탁상감정_담보감정M변경 -->
    <update id="save98">
                    <![CDATA[
        UPDATE "ES10"
        SET "RES_PL_BID_AMT"=#{RES_PL_BID_AMT}
        WHERE "YYYY" = #{YYYY}
          AND "SEQ" = #{SEQ}
        ]]>
    </update>
</mapper>